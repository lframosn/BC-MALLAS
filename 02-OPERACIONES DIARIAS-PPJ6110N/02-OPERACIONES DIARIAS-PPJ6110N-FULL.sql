--- creacion de grupo de usuarios SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'SAT')
BEGIN
CREATE USER SAT 
FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

--- creacion de grupo de usuarios STG_SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'STG_SAT')
BEGIN
CREATE USER STG_SAT 
FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

------- INTERFAZ OPERACIONES DIARIAS-PPJ6110N -----

drop table IF EXISTS SAT.PTCEDIA1;  CREATE TABLE IF NOT EXISTS SAT.PTCEDIA1  ( 	IDENTIFICADOR_EJECUCION	INTEGER		--IDENTIFICADOR UNICO DE EJECUCION
,	CODENT_D	VARCHAR	(4)	--CODIGO DE ENTIDAD
,	NSECFIC_D	DECIMAL	(10,0)	--NUMERO DE SECUENCIA DE LA CINTA
,	TIPOCINTA_D	DECIMAL	(2,0)	--TIPO DE LA CINTA
,	TIPOREG_D	VARCHAR	(1)	--TIPO DE REGISTRO D = DETALLE 
,	FILLER_D	VARCHAR	(91)	--FILLER
,	NUMREGPROC	DECIMAL	(12,0)	--NUMERO DE REGISTRO PROCESADO
,	INDDEBCRE	DECIMAL	(1,0)	--INDICADOR DE DEBITO O CREDITO:
--1 – CREDITO.	 	 		
--2 – DEBITO.	 	 		
--6 - PREPAGO.	 	 		
,	TIPMOV	VARCHAR	(1)	--2: TIPO CONCEPTO
,	CODENT	VARCHAR	(4)	--CODIGO DE ENTIDAD
,	CENTALTA	VARCHAR	(4)	--CENTRO DE ALTA CUENTA DE TARJETA
,	CUENTA	VARCHAR	(12)	--CUENTA DE TARJETA
,	CLAMON	DECIMAL	(3,0)	--CLAVE DE MONEDA
,	CODCONECO	DECIMAL	(4,0)	--CODIGO DE CONCEPTO ECONOMICO
,	DESCONECO	VARCHAR	(30)	--DESCRIPCION DEL CONCEPTO ECONOMICO
,	SIGNOCE	VARCHAR	(1)	--SIGNO FINAL ENTRE EL SIGNO DE LA FACTURA Y EL SIGNO DEL CONCEPTO.
,	TIPIMP	DECIMAL	(2,0)	--TIPO DE IMPORTE
,	IMPAPLECO	DECIMAL	(17,2)	--IMPORTE SOBRE EL QUE SE APLICA EL CONCEPTO ECONOMICO
,	IMPBRUECO	DECIMAL	(17,2)	--IMPORTE BRUTO CALCULADO POR EL CONCEPTO ECONOMICO
,	IMPBONECO	DECIMAL	(17,2)	--IMPORTE BONIFICADO SOBRE EL  CALCULO DEL CONCEPTO ECONOMICO
,	IMPIMPTO	DECIMAL	(17,2)	--IMPORTE DE IMPUESTO
--LOS DATOS SIGUIENTES SON SOLO PARA CREDITO	 	 		
,	NUMEXTCTA	DECIMAL	(3,0)	--NUMERO DE EXTRACTO
,	NUMMOVEXT	DECIMAL	(7,0)	--NUMERO DE MOVIMIENTO EN EL EXTRACTO
,	PORINT	DECIMAL	(7,4)	--PORCENTAJE DE INTERES APLCIADO
--DATO DE DEBITO	 	 		
,	NUMMOVDEB	DECIMAL	(9,0)	--NUMERO DE MOVIMIENTO DE DEBITO
,	FILLER1	VARCHAR	(724)	--NUMERO DE MOVIMIENTO DE DEBITO
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTOPEDI1;  CREATE TABLE IF NOT EXISTS SAT.PTOPEDI1  ( 	IDENTIFICADOR_EJECUCION	INTEGER		--IDENTIFICADOR UNICO DE EJECUCION
,	CODENT_D	VARCHAR	(4)	--CODIGO DE ENTIDAD
,	NSECFIC_D	DECIMAL	(10,0)	--NUMERO DE SECUENCIA DE LA CINTA
,	TIPOCINTA_D	DECIMAL	(2,0)	--TIPO DE LA CINTA
,	TIPOREG_D	VARCHAR	(1)	--TIPO DE REGISTRO D = DETALLE 
,	FILLER_D	VARCHAR	(91)	--FILLER
,	NUMREGPROC	DECIMAL	(12,0)	--NUMERO DE REGISTRO PROCESADO
,	INDDEBCRE	DECIMAL	(1,0)	--INDICADOR DE DEBITO O CREDITO:
--1 – CREDITO.	 	 		
--2 – DEBITO.	 	 		
--6 - PREPAGO.	 	 		
,	TIPMOV	VARCHAR	(1)	--1: TIPO MOVIMIENTO
,	CODENT	VARCHAR	(4)	--CODIGO DE ENTIDAD
,	CENTALTA	VARCHAR	(4)	--CENTRO DE ALTA CUENTA DE TARJETA
,	CUENTA	VARCHAR	(12)	--CUENTA DE TARJETA
,	CLAMON	DECIMAL	(3,0)	--CLAVE DE MONEDA
,	INDNORCOR	DECIMAL	(1,0)	--INDICADOR DE NORMAL O CORRECTORA
---        0 – NORMAL	 	 		
---        1 – CORRECTORA	 	 		
,	TIPOFAC	DECIMAL	(4,0)	--TIPO DE FACTURA
,	DESTIPFAC	VARCHAR	(30)	--DESCRIPCION TIPO DE FACTURA
,	SIGNOFAC	VARCHAR	(1)	--SIGNO DE LA FACTURA
,	TIPOFACSIST	DECIMAL	(4,0)	--TIPO DE FACTURA DE SISTEMA
,	INFACINF	VARCHAR	(1)	--INDICADOR DE FACTURA INFORMATIVA (S/N)
,	FECFAC	DATE		--FECHA DE LA FACTURA
,	NUMREFFAC	VARCHAR	(23)	--NUMERO REFERENCIA FACTURA
,	PAN	VARCHAR	(22)	--PAN DE LA TARJETA QUE REALIZO LA OPERACION
,	CLAMONDIV	DECIMAL	(3,0)	--CODIGO DE MONEDA DE LA OPERACION ORIGINAL O DIVISA
,	IMPDIV	DECIMAL	(17,2)	--IMPORTE EN DIVISA ORIGINAL
,	IMPFAC	DECIMAL	(17,2)	--IMPORTE DE LA FACTURA
,	CMBAPLI	DECIMAL	(9,4)	--FACTOR DE CAMBIO APLICADO (SOLO TIENE SENTIDO PARA OPERACIONES EN EXTRANJERO)
,	NUMAUT	VARCHAR	(6)	--NUMERO DE AUTORIZACION
,	CODCOM	VARCHAR	(15)	--CODIGO DE COMERCIO 
,	NOMCOMRED	VARCHAR	(27)	--NOMBRE COMERCIO REDUCIDO
,	CODACT	DECIMAL	(4,0)	--CODIGO DE ACTIVIDAD
,	IMPLIQ	DECIMAL	(17,2)	--IMPORTE DE LIQUIDACION DE LA OPERACION CON EL INTERCAMBIO
,	CLAMONLIQ	DECIMAL	(3,0)	--CODIGO DE MONEDA DE LIQUIDACION CON EL INTERCAMBIO
,	IMPIMPTO	DECIMAL	(17,2)	--IMPORTE DE IMPUESTO
,	FECPROCES	DATE		--FECHA DE PROCESO O ENTRADA DE LA OPERACION AL SISTEMA
,	CODPAIS	DECIMAL	(3,0)	--CODIGO DEL PAIS 
,	NOMPOB	VARCHAR	(26)	--POBLACION DONDE SE REALIZO LA OPERACION
,	FECCONTA	DATE		--FECHA CONTABLE OPERACION
,	ORIGENOPE	VARCHAR	(4)	--ORIGEN OPERACION (VER VALORES DEL CAMPO ORIGEN)
,	TIPFRAN	DECIMAL	(4,0)	--TIPO DE FRANQUICIA
,	SECOPE	DECIMAL	(12,0)	--SECUENCIA DE OPERACION DENTRO DE LA FRANQUICIA O RED
,	NUMSECREC	DECIMAL	(15,0)	--NUMERO DE SECUENCIA EN EL MAESTRO DE RECIBOS (SOLO PARA MOVIMIENTOS DE PAGO)
,	SESIONRED	VARCHAR	(12)	--SESION DE LA RED
,	SIAIDCD	VARCHAR	(19)	--CODIGO DE IDENTIFICACION SIA. ESTA COMPUESTO DE LA SESION DE SIA Y DEL IDENTIFICADOR DEL MENSAJE.
,	CALFRAUDE	VARCHAR	(3)	--CALIFICACION DE FRAUDE POR LYNX
,	IDENTCLI	VARCHAR	(8)	--NUMERO UNICO DE PERSONA
,	INDINCEST	VARCHAR	(1)	--INDICADOR DE INCIDENCIA EN ESTUDIO
---        ‘S’ – SI 	 	 		
---        ‘N’ – NO 	 	 		
--LOS DATOS SIGUIENTES SON SOLO PARA CREDITO	 	 		
,	TIPDOCPAG	DECIMAL	(2,0)	--TIPO DE DOCUMENTO PARA MOVIMIENTOS DE PAGO (PARA MOVIMIENTOS DE DEBITO IRA A CEROS)
,	REFDOCPAG	VARCHAR	(20)	--REFERENCIA DEL DOCUMENTO PARA MOVIMIENTOS DE PAGO (PARA MOVIMIENTOS DE DEBITO IRA A BLANCOS)
,	IMPAMORT	DECIMAL	(17,2)	--IMPORTE AMORTIZADO (SOLO VENDRA INFORMADO PARA MOVIMIENTOS DE CREDITO, PARA DEBITO VENDRA A BLANCOS)
,	NUMMOVEXT	DECIMAL	(7,0)	--NUMERO DE MOVIMIENTO EN EL EXTRACTO
,	NUMEXTCTA	DECIMAL	(3,0)	--NUMERO DE EXTRACTO
,	FECLIQ	DATE		--FECHA DE LIQUIDACION
,	INDMOVANU	DECIMAL	(1,0)	--INDICADOR DE MOVIMIENTO ANULADO
---        0 – NORMAL 	 	 		
---        1 – ANULADO 	 	 		
,	INDRET	DECIMAL	(1,0)	--INDICADOR DE MOVIMIENTO RETENIDO
---        0 – NORMAL 	 	 		
---        1 – RETENIDO 	 	 		
,	INDMOVEXT	DECIMAL	(1,0)	--INDICADOR DE MOVIMIENTO EXTRACTADO
---        0 – PENDIENTE	 	 		
---        1 – EXTRACTADO	 	 		
,	CODTIPC	VARCHAR	(4)	--CODIGO DE TIPO DE COMPRA EN CUOTAS
,	TOTCUOTAS	DECIMAL	(9,0)	--NUMERO TOTAL DE CUOTAS
,	PORINT	DECIMAL	(7,4)	--PORCENTAJE DE INTERES APLICADO
,	NUMOPECUO	DECIMAL	(6,0)	--NUMERO DE OPERACION EN COMPRA EN CUOTAS
,	IMPCUOTA	DECIMAL	(17,2)	--IMPORTE DE LA CUOTA
,	LINREF	DECIMAL	(8,0)	--LINEA DE REFERENCIA DEL MOVIMIENTO
,	FORPAGO	DECIMAL	(2,0)	--FORMA DE PAGO DE LA OPERACION
--LOS DATOS SIGUIENTES SON SOLO PARA DEBITO	 	 		
,	NUMMOVDEB	DECIMAL	(9,0)	--NUMERO DE MOVIMIENTO DE DEBITO
,	FILLER1	VARCHAR	(373)	--
); COMMIT;	 	 		

DROP TABLE IF EXISTS "DWH_ETLS"."PTCEDIA1";
COMMIT;
DROP TABLE IF EXISTS "STG"."PTCEDIA1";
COMMIT;
DROP TABLE IF EXISTS "STG_SAT"."PTCEDIA1";
COMMIT;

CREATE TABLE IF NOT EXISTS "STG_SAT"."PTCEDIA1" (	
	"CODENT_D" VARCHAR(4) NULL ,
	"NSECFIC_D" DECIMAL(10,0) NULL ,
	"TIPOCINTA_D" DECIMAL(2,0) NULL ,
	"TIPOREG_D" VARCHAR(1) NULL ,
	"FILLER_D" VARCHAR(91) NULL ,
	"NUMREGPROC" DECIMAL(12,0) NULL ,
	"INDDEBCRE" DECIMAL(1,0) NULL ,
	"TIPMOV" VARCHAR(1) NULL ,
	"CODENT" VARCHAR(4) NULL ,
	"CENTALTA" VARCHAR(4) NULL ,
	"CUENTA" VARCHAR(12) NULL ,
	"CLAMON" DECIMAL(3,0) NULL ,
	"CODCONECO" DECIMAL(4,0) NULL ,
	"DESCONECO" VARCHAR(30) NULL ,
	"SIGNOCE" VARCHAR(1) NULL ,
	"TIPIMP" DECIMAL(2,0) NULL ,
	"IMPAPLECO" DECIMAL(17,2) NULL ,
	"IMPBRUECO" DECIMAL(17,2) NULL ,
	"IMPBONECO" DECIMAL(17,2) NULL ,
	"IMPIMPTO" DECIMAL(17,2) NULL ,
	"NUMEXTCTA" DECIMAL(3,0) NULL ,
	"NUMMOVEXT" DECIMAL(7,0) NULL ,
	"PORINT" DECIMAL(7,4) NULL ,
	"NUMMOVDEB" DECIMAL(9,0) NULL ,
	"FILLER1" VARCHAR(724) NULL 
)  COMMIT;

DROP TABLE IF EXISTS "DWH_ETLS"."PTOPEDI1";
COMMIT;
DROP TABLE IF EXISTS "STG"."PTOPEDI1";
COMMIT;
DROP TABLE IF EXISTS "STG_SAT"."PTOPEDI1";
COMMIT;

CREATE TABLE IF NOT EXISTS "STG_SAT"."PTOPEDI1" (	
	"CODENT_D" VARCHAR(4) NULL ,
	"NSECFIC_D" DECIMAL(10,0) NULL ,
	"TIPOCINTA_D" DECIMAL(2,0) NULL ,
	"TIPOREG_D" VARCHAR(1) NULL ,
	"FILLER_D" VARCHAR(91) NULL ,
	"NUMREGPROC" DECIMAL(12,0) NULL ,
	"INDDEBCRE" DECIMAL(1,0) NULL ,
	"TIPMOV" VARCHAR(1) NULL ,
	"CODENT" VARCHAR(4) NULL ,
	"CENTALTA" VARCHAR(4) NULL ,
	"CUENTA" VARCHAR(12) NULL ,
	"CLAMON" DECIMAL(3,0) NULL ,
	"INDNORCOR" DECIMAL(1,0) NULL ,
	"TIPOFAC" DECIMAL(4,0) NULL ,
	"DESTIPFAC" VARCHAR(30) NULL ,
	"SIGNOFAC" VARCHAR(1) NULL ,
	"TIPOFACSIST" DECIMAL(4,0) NULL ,
	"INFACINF" VARCHAR(1) NULL ,
	"FECFAC" DATE NULL ,
	"NUMREFFAC" VARCHAR(23) NULL ,
	"PAN" VARCHAR(22) NULL ,
	"CLAMONDIV" DECIMAL(3,0) NULL ,
	"IMPDIV" DECIMAL(17,2) NULL ,
	"IMPFAC" DECIMAL(17,2) NULL ,
	"CMBAPLI" DECIMAL(9,4) NULL ,
	"NUMAUT" VARCHAR(6) NULL ,
	"CODCOM" VARCHAR(15) NULL ,
	"NOMCOMRED" VARCHAR(27) NULL ,
	"CODACT" DECIMAL(4,0) NULL ,
	"IMPLIQ" DECIMAL(17,2) NULL ,
	"CLAMONLIQ" DECIMAL(3,0) NULL ,
	"IMPIMPTO" DECIMAL(17,2) NULL ,
	"FECPROCES" DATE NULL ,
	"CODPAIS" DECIMAL(3,0) NULL ,
	"NOMPOB" VARCHAR(26) NULL ,
	"FECCONTA" DATE NULL ,
	"ORIGENOPE" VARCHAR(4) NULL ,
	"TIPFRAN" DECIMAL(4,0) NULL ,
	"SECOPE" DECIMAL(12,0) NULL ,
	"NUMSECREC" DECIMAL(15,0) NULL ,
	"SESIONRED" VARCHAR(12) NULL ,
	"SIAIDCD" VARCHAR(19) NULL ,
	"CALFRAUDE" VARCHAR(3) NULL ,
	"IDENTCLI" VARCHAR(8) NULL ,
	"INDINCEST" VARCHAR(1) NULL ,
	"TIPDOCPAG" DECIMAL(2,0) NULL ,
	"REFDOCPAG" VARCHAR(20) NULL ,
	"IMPAMORT" DECIMAL(17,2) NULL ,
	"NUMMOVEXT" DECIMAL(7,0) NULL ,
	"NUMEXTCTA" DECIMAL(3,0) NULL ,
	"FECLIQ" DATE NULL ,
	"INDMOVANU" DECIMAL(1,0) NULL ,
	"INDRET" DECIMAL(1,0) NULL ,
	"INDMOVEXT" DECIMAL(1,0) NULL ,
	"CODTIPC" VARCHAR(4) NULL ,
	"TOTCUOTAS" DECIMAL(9,0) NULL ,
	"PORINT" DECIMAL(7,4) NULL ,
	"NUMOPECUO" DECIMAL(6,0) NULL ,
	"IMPCUOTA" DECIMAL(17,2) NULL ,
	"LINREF" DECIMAL(8,0) NULL ,
	"FORPAGO" DECIMAL(2,0) NULL ,
	"NUMMOVDEB" DECIMAL(9,0) NULL ,
	"FILLER1" VARCHAR(373) NULL 
)  COMMIT;

------------------------------------------------
---- CONTROL DE VERSION ------------------------
------------------------------------------------
create table IF NOT EXISTS CNF.VERSION_OBJETOS (
 NOMBRE_MALLA varchar(100)
,OBJECT_NAME varchar(100)
,OBJECT_USER varchar(20)
,VERSION_COMMIT VARCHAR(100)
,VERSION_CODE VARCHAR(20)
,VERSION_DATE DATETIME
,CRDATE DATETIME null default getdate()
,CRUSER varchar(20) null default user_name()
)
;
COMMIT;

declare 
 @NOMBRE_MALLA varchar(100)
,@OBJECT_NAME varchar(100)
,@OBJECT_USER varchar(20)
,@VERSION_COMMIT VARCHAR(100)
,@VERSION_CODE VARCHAR(20)
,@VERSION_DATE DATETIME 
,@CRDATE DATETIME

select 
 @NOMBRE_MALLA = 'PPJ6110N'
,@OBJECT_NAME = 'PTCEDIA1'
,@OBJECT_USER = 'SAT'
,@VERSION_COMMIT = 'f0e40d208599d1ca3c1f317fee2205f331490c20'
,@VERSION_CODE = 'f0e40d2'
,@VERSION_DATE = ' 2019/01/28 4:16:42 PM'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOPEDI1'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 
 
select 
 @OBJECT_NAME = 'PTCEDIA1'
,@OBJECT_USER = 'STG_SAT'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOPEDI1'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

COMMIT;