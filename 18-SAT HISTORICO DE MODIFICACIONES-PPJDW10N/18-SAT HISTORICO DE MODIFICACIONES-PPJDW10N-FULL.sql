--- creacion de grupo de usuarios SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'SAT')
BEGIN
  CREATE USER SAT 
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

--- creacion de grupo de usuarios STG_SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'STG_SAT')
BEGIN
  CREATE USER STG_SAT
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

drop table IF EXISTS SAT.TBHISMOD;  CREATE TABLE IF NOT EXISTS SAT.TBHISMOD  ( 	IDENTIFICADOR_EJECUCION	INTEGER		--IDENTIFICADOR UNICO DE EJECUCION
--MPDT068-Histórico de Modificaciones	 	 		
,	CODENT_ENC	VARCHAR	(4)	--Código de entidad
,	OFICINA	VARCHAR	(4)	--Oficina Usuario
,	USUARIO	VARCHAR	(8)	--Usuario que realiza la acción
,	TIPO_ACCION	VARCHAR	(30)	--Acción realizada por el usuario
,	TIPO_REGISTRO	VARCHAR	(1)	--REGISTRO DETALLE (alfanumerico 2300)
--1 - Log Movimientos formato  ATLOGMOV	 	 		
--2 - Histórico Modificaciones formato ATHISMOD	 	 		
--DETALLE DE COLUMNAS ATHISMOD	 	 		
,	CODENT	VARCHAR	(4)	--CÓDIGO DE ENTIDAD
,	NOMBRETAREA	VARCHAR	(20)	--NOMBRE DE TAREA (VER ATTIPMOV)
,	ORIGENOPE	VARCHAR	(4)	--ORIGEN OPERACIÓN (VER ATORIGEN)
,	FECHATAREA	DATE		--FECHA DEL SISTEMA
,	HORATAREA	TIME		--HORA DEL SISTEMA
,	SESIONTAREA	DECIMAL	(5,0)	--NÚMERO DE SESIÓN
,	INDACTUBD	DECIMAL	(2,0)	--INDICADOR DE ACTUALIZACIÓN DE BASE DE DATOS
,	CODENTUMO	VARCHAR	(4)	--ENTIDAD ÚLTIMA MODIFICACIÓN                          
,	CODOFIUMO	VARCHAR	(4)	--OFICINA ÚLTIMA MODIFICACIÓN                          
,	USUARIOUMO	VARCHAR	(8)	--USUARIO ÚLTIMA MODIFICACIÓN                          
,	CODTERMUMO	VARCHAR	(8)	--TERMINAL ÚLTIMA MODIFICACIÓN                         
,	CONTCUR	Timestamp		--CONTROL DE CONCURRENCIA                              
,	TABLA	VARCHAR	(7)	--NOMBRE DE LA TABLA
,	FILLER1	VARCHAR	(2186)	--FILLER
); COMMIT;	 	 

drop table IF EXISTS SAT.TBLOGMOV;  CREATE TABLE IF NOT EXISTS SAT.TBLOGMOV  ( 	IDENTIFICADOR_EJECUCION	INTEGER		--IDENTIFICADOR UNICO DE EJECUCION
--LOG DE MOVIMIENTOS	 	 		
,	CODENT_ENC	VARCHAR	(4)	--Código de entidad
,	OFICINA	VARCHAR	(4)	--Oficina Usuario
,	USUARIO	VARCHAR	(8)	--Usuario que realiza la acción
,	TIPO_ACCION	VARCHAR	(30)	--Acción realizada por el usuario
,	TIPO_REGISTRO	VARCHAR	(1)	--REGISTRO DETALLE (alfanumerico 2300)
--1 - Log Movimientos formato  ATLOGMOV	 	 		
--2 - Histórico Modificaciones formato ATHISMOD	 	 		
--DETALLE DE COLUMNAS ATHISMOD	 	 		
,	CODENT	VARCHAR	(4)	--CÓDIGO DE ENTIDAD
,	CENTALTA	VARCHAR	(4)	--CENTRO DE ALTA CUENTA DE TARJETA
,	CUENTA	VARCHAR	(12)	--CUENTA DE TARJETA
,	NUMSECHIS	DECIMAL	(15,0)	--NÚMERO SECUENCIAL DEL HISTÓRICO
,	PAN	VARCHAR	(22)	--PAN DE LA TARJETA
,	CODCOM	VARCHAR	(15)	--CÓDIGO DE COMERCIO
,	FECHAMOD	DATE		--FECHA DE MODIFICACIÓN
,	HORAMOD	TIME		--HORA DE MODIFICACIÓN
,	TIPACCES	DECIMAL	(1,0)	--TIPO DE ACCESO:
--0 - CUENTA DE TARJETA	 	 		
--1 - TARJETA	 	 		
--2 - COMERCIO	 	 		
,	PROCESO	VARCHAR	(10)	--NOMBRE DEL PROCESO QUE REALIZÓ LA MODIFICACIÓN
,	DESPROCESO	VARCHAR	(30)	--DESCRIPCIÓN DEL PROCESO O FUNCIÓN
,	DATOMOD	VARCHAR	(2)	--DATO MODIFICADO (BANCOS, BLOQUEOS, .)
,	MOTIVO	VARCHAR	(2)	--MOTIVO DE LA MODIFICACIÓN
,	CANALMOD	VARCHAR	(2)	--CANAL DE LA MODIFICACIÓN (EN PERSONA, TELÉFONO .)
,	CODENTUMO	VARCHAR	(4)	--ENTIDAD ÚLTIMA MODIFICACIÓN                          
,	CODOFIUMO	VARCHAR	(4)	--OFICINA ÚLTIMA MODIFICACIÓN                          
,	USUARIOUMO	VARCHAR	(8)	--USUARIO ÚLTIMA MODIFICACIÓN                          
,	CODTERMUMO	VARCHAR	(8)	--TERMINAL ÚLTIMA MODIFICACIÓN                         
,	CONTCUR	Timestamp		--CONTROL DE CONCURRENCIA                              
,	TABLA	VARCHAR	(3)	--NOMBRE DE TABLA MODIFICADA
,	FILLER1	VARCHAR	(2106)	--FILLER
); COMMIT;	 	 		

drop table IF EXISTS STG_SAT.TBHISMOD;  
CREATE TABLE IF NOT EXISTS "STG_SAT"."TBHISMOD" (
	"CODENT_ENC" VARCHAR(4) NULL ,
	"OFICINA" VARCHAR(4) NULL ,
	"USUARIO" VARCHAR(8) NULL ,
	"TIPO_ACCION" VARCHAR(30) NULL ,
	"TIPO_REGISTRO" VARCHAR(1) NULL ,
	"CODENT" VARCHAR(4) NULL ,
	"NOMBRETAREA" VARCHAR(20) NULL ,
	"ORIGENOPE" VARCHAR(4) NULL ,
	"FECHATAREA" VARCHAR(10) NULL ,
	"HORATAREA" VARCHAR(8) NULL ,
	"SESIONTAREA" DECIMAL(5,0) NULL ,
	"INDACTUBD" DECIMAL(2,0) NULL ,
	"CODENTUMO" VARCHAR(4) NULL ,
	"CODOFIUMO" VARCHAR(4) NULL ,
	"USUARIOUMO" VARCHAR(8) NULL ,
	"CODTERMUMO" VARCHAR(8) NULL ,
	"CONTCUR" VARCHAR(26) NULL ,
	"TABLA" VARCHAR(7) NULL ,
	"FILLER1" VARCHAR(2186) NULL 
)COMMIT;

drop table IF EXISTS STG_SAT.TBLOGMOV;  
CREATE TABLE IF NOT EXISTS "STG_SAT"."TBLOGMOV" (
	"CODENT_ENC" VARCHAR(4) NULL ,
	"OFICINA" VARCHAR(4) NULL ,
	"USUARIO" VARCHAR(8) NULL ,
	"TIPO_ACCION" VARCHAR(30) NULL ,
	"TIPO_REGISTRO" VARCHAR(1) NULL ,
	"CODENT" VARCHAR(4) NULL ,
	"CENTALTA" VARCHAR(4) NULL ,
	"CUENTA" VARCHAR(12) NULL ,
	"NUMSECHIS" DECIMAL(15,0) NULL ,
	"PAN" VARCHAR(22) NULL ,
	"CODCOM" VARCHAR(15) NULL ,
	"FECHAMOD" VARCHAR(10) NULL ,
	"HORAMOD" VARCHAR(8) NULL ,
	"TIPACCES" DECIMAL(1,0) NULL ,
	"PROCESO" VARCHAR(10) NULL ,
	"DESPROCESO" VARCHAR(30) NULL ,
	"DATOMOD" VARCHAR(2) NULL ,
	"MOTIVO" VARCHAR(2) NULL ,
	"CANALMOD" VARCHAR(2) NULL ,
	"CODENTUMO" VARCHAR(4) NULL ,
	"CODOFIUMO" VARCHAR(4) NULL ,
	"USUARIOUMO" VARCHAR(8) NULL ,
	"CODTERMUMO" VARCHAR(8) NULL ,
	"CONTCUR" VARCHAR(26) NULL ,
	"TABLA" VARCHAR(3) NULL ,
	"FILLER1" VARCHAR(2106) NULL 
)COMMIT;

------------------------------------------------
---- CONTROL DE VERSION ------------------------
------------------------------------------------
create table IF NOT EXISTS CNF.VERSION_OBJETOS (
 NOMBRE_MALLA varchar(100)
,OBJECT_NAME varchar(100)
,OBJECT_USER varchar(20)
,VERSION_COMMIT VARCHAR(100)
,VERSION_CODE VARCHAR(20)
,VERSION_DATE DATETIME
,CRDATE DATETIME null default getdate()
,CRUSER varchar(20) null default user_name()
)
;
COMMIT;

declare 
 @NOMBRE_MALLA varchar(100)
,@OBJECT_NAME varchar(100)
,@OBJECT_USER varchar(20)
,@VERSION_COMMIT VARCHAR(100)
,@VERSION_CODE VARCHAR(20)
,@VERSION_DATE DATETIME 
,@CRDATE DATETIME

select 
 @NOMBRE_MALLA = 'PPJDW10N'
,@OBJECT_NAME = 'TBHISMOD'
,@OBJECT_USER = 'SAT'
,@VERSION_COMMIT = 'ae072868d6df45750dc8484029094fc50b7f0d6c'
,@VERSION_CODE = 'ae07286'
,@VERSION_DATE = 'March 18, 2019 6:54:38 PM'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'TBLOGMOV'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_USER = 'STG_SAT'
,@OBJECT_NAME = 'TBHISMOD'
,@VERSION_COMMIT = 'b3302df524517ce70095e98fc9757ef2baccd82f'
,@VERSION_CODE = 'b3302df'
,@VERSION_DATE = 'March 22, 2019 9:19:43 AM'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'TBLOGMOV'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

COMMIT;

-- Inserts NUEVAS MALLAS
IF NOT EXISTS(SELECT 1 FROM "CNF"."MALLAS" WHERE "NOMBRE_MALLA" = 'PPJDW10N' )
BEGIN
  INSERT INTO "CNF"."MALLAS" ("NOMBRE_MALLA","DESCRIPCION","ENCABEZADO","CONTROL_FECHA") VALUES('PPJDW10N','Historico de Movimientos',0,1);
END
COMMIT;