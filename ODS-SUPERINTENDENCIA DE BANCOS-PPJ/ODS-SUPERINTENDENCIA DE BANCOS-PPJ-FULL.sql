--- creacion de grupo de usuarios SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'SAT')
BEGIN
  CREATE USER SAT 
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

--- creacion de grupo de usuarios STG_SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'STG_SAT')
BEGIN
  CREATE USER STG_SAT
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

drop table IF EXISTS SAT.PTOPERAC;  CREATE TABLE IF NOT EXISTS SAT.PTOPERAC  ( 	OP_FECHA_CORTE	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO DE OPERACIONES	 	 		
,	OP_FILIAL	DECIMAL	(1,0)	--IDENTIFICACION DE LA FILIAL 
,	OP_PRODUCTO	DECIMAL	(2,0)	--CÓDIGO DEL PRODUCTO 
,	OP_OPERACION	DECIMAL	(10,0)	--CODIGO OPERACIÓN 
,	OP_NUM_OP_IFI	VARCHAR	(20)	--NUMERO DE REFERENCIA 
,	OP_OFICIAL	VARCHAR	(10)	--CÓDIGO DEL FUNCIONARIO  
,	OP_CLIENTE	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	OP_CIUDAD	DECIMAL	(4,0)	--CÓDIGO CIUDAD 
,	OP_OFICINA	DECIMAL	(5,0)	--CÓDIGO OFICINA 
,	OP_MONEDA	DECIMAL	(1,0)	--CÓDIGO MONEDA 
,	OP_SECTOR_CONTABLE	VARCHAR	(2)	--SECTOR ECONÓMICO CONTABLE 
,	OP_SECTOR_REAL	VARCHAR	(2)	--CODIGO SECTOR REAL 
,	OP_DESTINO	VARCHAR	(10)	--DESTINO ECONÓMICO 
,	OP_TIPO_OPER	VARCHAR	(2)	--TIPO OPERACIÓN 
,	OP_CATEG_CONT	VARCHAR	(1)	--CATEGORÍA CONTABLE 
,	OP_CATEGORIA_OPER	VARCHAR	(2)	--CÓDIGO TIPO DE ACTIVO 
,	OP_CLASE_GTIA	VARCHAR	(2)	--CÓDIGO DE GARANTIA 
,	OP_TIPO_CARTERA	VARCHAR	(2)	--CÓDIGO TIPO CARTERA 
,	OP_TIPO_TRAMITE	VARCHAR	(1)	--CÓDIGO TIPO DE TRÁMITE 
,	OP_FECHA_INI	DATE		--FECHA DE OTORGAMIENTO 
,	OP_FECHA_FIN	DATE		--FECHA DE VENCIMIENTO 
,	OP_FECHA_FIN_LEGAL	DATE		--FECHA DE VENCIMIENTO LEGAL
,	OP_FECHA_CAS	DATE		--FECHA CASTIGO (SANEAMIENTO)
,	OP_FECHA_PAG	DATE		--FECHA DE ÚLTIMO PAGO 
,	OP_FECHA_CAN	DATE		--FECHA DE CANCELACIÓN 
,	OP_PLAZO	DECIMAL	(4,0)	--PLAZO DE LA OPERACIÓN 
,	OP_TOTAL_CUOTAS	DECIMAL	(3,0)	--NÚMERO TOTAL DE CUOTAS 
,	OP_TIPO_AMORTIZ	VARCHAR	(10)	--CÓDIGO TIPO DE AMORTIZACIÓN 
,	OP_GRACIA_CAP	DECIMAL	(2,0)	--DIAS DE GRACIA CAPITAL 
,	OP_GRACIA_INT	DECIMAL	(2,0)	--DIAS DE GRACIA INTERESES 
,	OP_PERIODO_CAP	DECIMAL	(2,0)	--PERIODO DE CAPITAL 
,	OP_PERIODO_INT	DECIMAL	(2,0)	--PERIODO DE INTERESES 
,	OP_MOROSIDAD_CAP	DECIMAL	(5,0)	--DIAS MORA CAPITAL 
,	OP_MOROSIDAD_INT	DECIMAL	(5,0)	--DIAS MORA INTERESES 
,	OP_TASA_ORIGINAL	DECIMAL	(6,4)	--TASA INTERES INICIAL 
,	OP_TASA_ACTUAL	DECIMAL	(6,4)	--TASA INTERES ACTUAL 
,	OP_TASA_REF	DECIMAL	(6,4)	--TASA INTERES REFERENCIA 
,	OP_TASA_EFECTIVA	DECIMAL	(6,4)	--TASA INTERES EFECTIVA 
,	OP_FORMA_REAJUSTE	VARCHAR	(1)	--FORMA DE REAJUSTE 
,	OP_ORIGEN_FONDOS	VARCHAR	(5)	--CÓDIGO ORIGEN DE FONDOS 
,	OP_VALOR_ORIGINAL	DECIMAL	(19,4)	--MONTO OTORGADO O LIMITE DE LA TARJETA 
,	OP_SALDO_CAPITAL	DECIMAL	(19,4)	--SALDO TOTAL CAPITAL 
,	OP_DESEMBOLSOS	DECIMAL	(19,4)	--DESEMBOLSOS PENDIENTES 
,	OP_CAPITAL_VCDO	DECIMAL	(19,4)	--CAPITAL VENCIDO 
,	OP_CAPITAL_MORA	DECIMAL	(19,4)	--CAPITAL MORA 
,	OP_SALDO_INTERES	DECIMAL	(19,4)	--SALDO TOTAL INTERESES 
,	OP_INTERES_VCDO	DECIMAL	(19,4)	--INTESESES VENCIDOS 
,	OP_INTERES_MORA	DECIMAL	(19,4)	--INTERESES EN MORA 
,	OP_RIESGO	DECIMAL	(19,4)	--SALDO DEL RIESGO ADEUDADO 
,	OP_ABONO_PEND	DECIMAL	(19,4)	--ABONOS PENDIENTES 
,	OP_VAL_ACTUAL_GTIA	DECIMAL	(19,4)	--VALOR ACTUAL DE LA GARANTIA 
,	OP_VAL_REAL_GTIA	DECIMAL	(19,4)	--VALOR REAL DE LA GARANTIA 
,	OP_COB_ACTUAL_GTIA	DECIMAL	(19,4)	--COBERTURA CON VALOR ACTUAL DE LA GARANTÍA 
,	OP_COB_REAL_GTIA	DECIMAL	(19,4)	--ES LA COBERTURA REAL O DE MERCADO CNSOLIDADA. 
,	OP_GARANTIA_INSCRITA	VARCHAR	(1)	--IDENTIFICAR DE GARANTIA INSCRITA 
,	OP_GARANTE_CART_PIG	VARCHAR	(2)	--IDENTIFICAR DE GARANTE 
,	OP_TIPO_CERTIFICADO	VARCHAR	(2)	--IDENTIFICADOR DE TIPO CERTIFICADO 
,	OP_FACTOR_MLO	DECIMAL	(8,4)	--FACTOR DE CAMBIO MONEDA 
,	OP_ESTADO_OPER	VARCHAR	(10)	--ESTADO REAL DE LA OPERACIÓN 
,	OP_USUARIO_MODIF	VARCHAR	(14)	--ID USUARIO QUE MODIFICA DATOS 
,	OP_FECHA_MODIF	DATE		--FECHA DE MODIFICACION 
,	OP_MORA	DECIMAL	(19,4)	--SALDO INTERES MORA 
,	OP_TASA_MORA	DECIMAL	(6,4)	--TASA INTERES MORA 
,	OP_CUOTAS_MORA	DECIMAL	(2,0)	--CUOTAS EN MORA 
,	OP_CALIFICACION	VARCHAR	(10)	--CATEGORIA DE RIESGO 
,	OP_RANGO_PLAZO	DECIMAL	(2,0)	--RANGO DEL PLAZO 
,	OP_RANGO_MORA_CAP	DECIMAL	(2,0)	--RANGO DE DIAS MORA CAPITAL 
,	OP_RANGO_MORA_INT	DECIMAL	(2,0)	--RANGO DE DIAS MORA INTERESES 
,	OP_RESERVA_REQUERIDA	DECIMAL	(19,4)	--RESERVA DE SANEAMIENTO REQUERIDA 
,	OP_RESERVA_CONSTITUIDA	DECIMAL	(19,4)	--RESERVA DE SANEAMIENTO CONSTITUIDA 
,	OP_DEDUCCIONES	DECIMAL	(19,4)	--DEDUCCIONES 
,	OP_COBERTURA_GTIA	DECIMAL	(19,4)	--COBERTURA DE LA GARANTIA 
,	OP_ETAPA_COBRO	VARCHAR	(10)	--ETAPA DE COBRO 
,	OP_CALIF_ANT	VARCHAR	(10)	--CATEGORIA DE RIESGO DEL MES PASADO 
,	OP_RES_REQUE_ANT	DECIMAL	(19,4)	--RESERVAS DE SANEAMIENTO REQUERIDA DEL MES ANTERIOR 
,	OP_RES_CONST_ANT	DECIMAL	(19,4)	--RESERVAS DE SANEAMIENTO CONSTITUIDA DEL MES ANTERIOR 
,	OP_RESULTADO_CALIF	DECIMAL	(1,0)	--CÓDIGO RESULTADO DE LA EVALUACIÓN 
,	OP_TIPO_MOROSIDAD	DECIMAL	(1,0)	--CÓDIGO TIPO MOROSIDAD 
,	OP_RANGO_MOROSIDAD	DECIMAL	(2,0)	--RANGO DE DIAS MORA MAYOR 
,	OP_RANGO_SALDO_TOTAL	DECIMAL	(2,0)	--RANGO DE SALDO 
,	OP_TIPO_OPER_SSF	VARCHAR	(10)	--CÓDIGO TIPO OPERACIÓN SEGÚN SSF 
,	OP_DESTINO_OPER_SSF	VARCHAR	(10)	--CODIGO DE DESTINO DE LA OPERACIÓN SEGÚN CODIFICACIÓN DE LA SSF.
,	OP_RANGO_PLAZO_FALTANTE	DECIMAL	(2,0)	--RANGO DE PLAZO FALTANTE 
,	OP_TIPO_LINEA_CR	VARCHAR	(10)	--CODIGO DE TIPO DE LINEA 
,	OP_CUENTA_CAP	VARCHAR	(20)	--CÓDIGO DE LA CUENTA CONTABLE DE CAPITAL 
,	OP_CUENTA_INT	VARCHAR	(20)	--CÓDIGO DE LA CUENTA CONTABLE DE INTERESES
,	OP_CUOTA	DECIMAL	(19,4)	--VALOR DE LA CUOTA
,	OP_NUM_LINEA	DECIMAL	(4,0)	--NÚMERO DE LINEA 
,	OP_OPERACION_CANCELO	VARCHAR	(24)	--OPERACIÓN CANCELADA 
,	OP_CLASE_GASTO	VARCHAR	(10)	--CÓDIGO DE CLASE DE GASTO 
,	OP_UNIDAD_MEDIDA	VARCHAR	(10)	--CÓDIGO DE UNIDAD DE MEDIDA 
,	OP_CANTIDAD_FINANCIADAS	DECIMAL	(19,4)	--CANTIDAD FINANCIADA 
,	OP_TRAMITE	DECIMAL	(4,0)	--NÚMERO DE TRAMITE 
,	OP_CUPOS_TERCEROS	VARCHAR	(10)	--CÓDIGO DE CUPOS TERCEROS 
,	OP_ULT_PAGCAP	DATE		--FECHA DE ÚLTIMO PAGO DE CAPITAL 
,	OP_ULT_PAGINT	DATE		--FECHA DE ÚLTIMO PAGO DE INTERÉS 
,	OP_FULT_REAJ	DATE		--FECHA DE ÚLTIMO REAJUSTE 
,	OP_FECHA_ESCRITURACION	DATE		--FECHA DE ESCRITURACIÓN 
,	OP_FECHA_DESDE_MORA_CAP	DATE		--FECHA DE INICIO DE MORA CAPITAL 
,	OP_FECHA_DESDE_MORA_INTS	DATE		--FECHA DE INICIO DE MORA INTERES 
,	OP_CUOT_MOCAP	DECIMAL	(5,0)	--NÚMERO DE CUOTAS EN MORA DE CAPITAL 
,	OP_CUOT_MOINT	DECIMAL	(5,0)	--NÚMERO DE CUOTAS EN MORA DE INTERES 
,	OP_PAGO_ADECAP	DECIMAL	(19,4)	--PAGO DE ADELANTO DE CAPITAL 
,	OP_CUOTAS_PAG	DECIMAL	(2,0)	--NÚMERO DE CUOTAS PAGADAS 
,	OP_DIAS_ANIO	DECIMAL	(3,0)	--NÚMEROS DE DIAS DEL AÑO 
,	OP_FECPROXCUO	DATE		--FECHA DE LA PRÓXIMA CUOTA 
,	OP_CLABAS	VARCHAR	(10)	--CLASIFICACION BASICA DEL PRESTAMO  
,	OP_VAL_GTIA_HIPO	DECIMAL	(19,4)	--  VALOR ACUMULADO DE GARANTIAS HIPOTECARIAS 
,	OP_VAL_GTIA_OTRAS	DECIMAL	(19,4)	--VALOR ACUMULADO DE OTRAS GARANTIAS NO HIPOTECARIAS 
,	OP_RIESGOS_A_RVA	DECIMAL	(19,4)	--RIESGO NETO 
,	OP_MONTO_SEGURO	DECIMAL	(19,4)	--MONTO DEL SEGURO DEL CREDITO 
,	OP_TIPO_PLAZO	VARCHAR	(10)	--TIPO DE PLAZO 
,	OP_MODIFICADO	VARCHAR	(1)	--BANDERA DE MODIFICACION 
,	OP_TIPO_DIVIDENDO	VARCHAR	(10)	--TIPO DIVIDENDO 
,	OP_RIESGO_A_RVA_ANT	DECIMAL	(19,4)	--RIESGO NETO DEL MES ANTERIOR 
,	OP_TASA_INI	DECIMAL	(6,4)	--TASA  INTERES INICIAL 
,	OP_DIAS_PRORROGA	DECIMAL	(4,0)	--DIAS DE PRORROGA 
,	OP_FECHA_INI_PRORR	DATE		--FECHA INICIO DE PRORROGA 
,	OP_TIPO_TASA_REFERENCIA	VARCHAR	(10)	--TIPO DE LA TASA DE REFERENCIA 
,	OP_FECHA_PROX_REAJUSTE	DATE		--FECHA DEL PROXIMO AJUSTE 
,	OP_TIPOTC	VARCHAR	(1)	--TIPO DE TARJETA DE CRÉDITO 
,	OP_CLASETC	VARCHAR	(1)	--CLASE DE TARJETA DE CRÉDITO 
,	OP_PRODUCTOTC	VARCHAR	(20)	--PRODUCTO DE LA TARJETA DE CRÉDITO 
,	VEHICULO_LEGAL	VARCHAR	(3)	--VEHICULO LEGAL 
,	EPP_POST_ACCOUNT	VARCHAR	(19)	--PAN 
,	OP_STATUS	VARCHAR	(1)	--STATUS DE CUENTA
,	CODBLQ1	DECIMAL	(2,0)	--CODIGO DE BLOQUEO 1 
,	CODBLQ2	DECIMAL	(2,0)	--CODIGO DE BLOQUEO 2 
,	FECBLQ1	DATE		--FECHA DE BLOQUEO 1 DE CUENTA 
,	FECBLQ2	DATE		--FECHA DE BLOQUEO 2 DE CUENTA 
,	LOGO	VARCHAR	(4)	--CODIGO DE SUBPRODUCTO
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTPROINT;  CREATE TABLE IF NOT EXISTS SAT.PTPROINT  ( 	PV_FECHA_CORTE    	DATE		--TIPO OPERACIÓN SSF 
--LISTADO INTEREST PROVISION	 	 		
,	PV_NUM_OP_IFI     	VARCHAR	(20)	--NUMERO DE REFERENCIA 
,	PV_CLIENTE        	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	PV_TIPO_OPER      	VARCHAR	(2)	--TIPO OPERACIÓN 
,	PV_BALANCE_INT    	DECIMAL	(11,2)	--BALANCE INTERES  
,	PV_ACUMU_INT      	DECIMAL	(11,2)	--INTERESES DEL PERIODO 
,	PV_TOTAL_INT      	DECIMAL	(11,2)	--BALANCE TOTAL INTERÉS 
,	PV_CLABAS	VARCHAR	(10)	--CLASIFICACION BASICA DEL PRESTAMO
,	PV_TASA_ORIG      	DECIMAL	(6,4)	--TASA ORIGINAL 
,	PV_BILLING_CYCLE  	VARCHAR	(2)	--CICLO FACTURACIÓN 
,	PV_BALANCE_PRINC  	DECIMAL	(11,2)	--BALANCE CAPITAL 
,	PV_BRAND          	VARCHAR	(1)	--BRAND 
,	PV_VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTOCONC;  CREATE TABLE IF NOT EXISTS SAT.PTOCONC  ( 	OP_FECHA_CORTE  	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO CONCILIATION	 	 		
,	OP_TIPO_OPER_SSF 	VARCHAR	(10)	--TIPO OPERACIÓN SSF 
,	OP_TIPO_OPER 	VARCHAR	(2)	--ID TIPO DE OPERACIÓN 
,	OP_CLABAS 	VARCHAR	(10)	--CLASIFICACIÓN BÁSICA 
,	OP_COSTUMER_TYPE 	VARCHAR	(10)	--SECTOR ECONÓMICO CONTABLE 
,	OP_CAPITAL_VIG 	DECIMAL	(11,2)	--BALANCE PRINCIPAL  
,	OP_CAPITAL_VEN 	DECIMAL	(11,2)	--CAPITAL VENCIDO 
,	OP_INTERES_VIG 	DECIMAL	(11,2)	--BALANCE INTERÉS 
,	OP_INTERES_VEN 	DECIMAL	(11,2)	--INTERÉS VENCIDO 
,	TOTAL 	DECIMAL	(11,2)	--CAPITAL VIGENTE + CAPITAL VENCIDO + INTERES VIGENTE + INTERÉS VENCIDO 
,	VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTOCOPS;  CREATE TABLE IF NOT EXISTS SAT.PTOCOPS  ( 	OP_FECHA_CORTE 	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO CONCILIATION OPS	 	 		
,	OP_TIPO_OPER_SSF 	VARCHAR	(10)	--TIPO OPERACIÓN SSF 
,	OP_TIPO_OPER 	VARCHAR	(2)	--ID TIPO DE OPERACIÓN 
,	OP_CLABAS 	VARCHAR	(10)	--CLASIFICACIÓN BÁSICA 
,	OP_COSTUMER_TYPE 	VARCHAR	(10)	--SECTOR ECONÓMICO CONTABLE 
,	OP_CAPITAL_VIG	DECIMAL	(11,2)	--BALANCE PRINCIPAL  
,	OP_CAPITAL_VEN 	DECIMAL	(11,2)	--CAPITAL VENCIDO 
,	OP_INTERES_VIG 	DECIMAL	(11,2)	--BALANCE INTERÉS 
,	OP_INTERES_VEN 	DECIMAL	(11,2)	--INTERÉS VENCIDO 
,	TOTAL 	DECIMAL	(11,2)	--CAPITAL VIGENTE + CAPITAL VENCIDO + INTERES VIGENTE + INTERÉS VENCIDO 
,	BRAND 	VARCHAR	(1)	--BRAND 
,	VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTCREBAL;  CREATE TABLE IF NOT EXISTS SAT.PTCREBAL  ( 	IDW_DATE	DATE		--FECHA 
--LISTADO CREDIT BALANCE	 	 		
,	NIT_PERSONA 	VARCHAR	(24)	--NUMERO DE IDENTIFICACION TRIBUTARIA 
,	PRIMAPELL 	VARCHAR	(20)	--PRIMER PAELLIDO 
,	SEGUAPELL 	VARCHAR	(20)	--SEGUNDO APELLIDO 
,	APECASADA 	VARCHAR	(20)	--APELLIDO DE CASADA 
,	PRIMNOMB 	VARCHAR	(22)	--PRIMER NOMBRE 
,	SEGUNOMB 	VARCHAR	(20)	--SEGUNDO NOMBRE  
,	NOMSOCIE 	VARCHAR	(100)	--NOMBRE DE LA SOCIEDAD 
,	NUMREFEREN 	VARCHAR	(20)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	MONTOREFER 	DECIMAL	(11,2)	--MONTO OTORGADO ORIGINALMENTE 
,	SALDO 	DECIMAL	(11,2)	--SALDO TOTAL DE LA REFERENCIA 
,	FECOTOGAM 	DATE		--FECHA EN LA QUE FUE OTORGADO 
,	FECVENCIMI 	DATE		--FECHA VENCIMIENTO 
,	TASAINTE 	DECIMAL	(6,4)	--TASA VIGENTE EN EL MES REPORTADO 
,	ESTADO_OPER 	VARCHAR	(10)	--ESTADO DE LA OPERACIÓN PARA OBTENER SI LA CUENTA ESTÁ SANEADA 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHÍCULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTCHARGE;  CREATE TABLE IF NOT EXISTS SAT.PTCHARGE  ( 	IDW_DATE	DATE		--FECHA 
--LISTADO CHARGE OFF ACCOUNT	 	 		
,	CUENTA 	VARCHAR	(24)	--NÚMERO DE REFERENCIA DEL DEUDOR 
,	CIF 	VARCHAR	(24)	--NUMERO DE CIF ASIGNADO AL DEUDOR 
,	NIT 	VARCHAR	(24)	--NÚMERO DE IDENTIDAD 
,	NOMBRE 	VARCHAR	(100)	--NOMBRE DEL DEUDOR 
,	FECOTOR 	DATE		--FECHA DE OTORGAMIENTO 
,	FVENCT 	DATE		--FECHA DE VENCIMIENTO 
,	MONTO 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	CAPITAL 	DECIMAL	(11,2)	--SALDO CAPITAL 
,	INTERES 	DECIMAL	(11,2)	--SALDO DE INTERÉS 
,	FECVENT 	DATE		--FECHA DE TRASLADO A SANEADA 
,	VEHICULO_LEGAL  	VARCHAR	(3)	--VEHICULO_LEGAL 
,	ORG 	VARCHAR	(4)	--CÓDIGO DE ENTIDAD 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTDEDEIN;  CREATE TABLE IF NOT EXISTS SAT.PTDEDEIN  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO DETAILED DEFEREED INTERES	 	 		
,	OP_CLIENTE 	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	REFERENCIA 	VARCHAR	(24)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	FEC_REF 	DATE		--FECHA DE REFINANCIAMIENTO 
,	SDO_ORG_DIF 	DECIMAL	(11,2)	--BALANCE INTERESES DEVENGADOS 
,	VEHICULO_LEGAL         	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTMOINTR;  CREATE TABLE IF NOT EXISTS SAT.PTMOINTR  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO MOVIMIENTOS INTERES REF	 	 		
,	OP_CLIENTE	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	NUMREFEREN	VARCHAR	(24)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	INTNVOSRF	DECIMAL	(11,2)	--INTERESES TOTALES DE REFINANCIAMIENTO 
,	PAGINTRF	DECIMAL	(11,2)	--PAGO DE INTERESES DE REFINANCIAMIENTO 
,	MONTO 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	TOTAL_BALANCE 	DECIMAL	(11,2)	--BALANCE TOTAL 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTREDEIN;  CREATE TABLE IF NOT EXISTS SAT.PTREDEIN  ( 	FEC_MOV 	DATE		--FECHA 
--LISTADO RESUME DEFERRED INTERES	 	 		
,	SDO_ANT_DIF 	DECIMAL	(11,2)	--SALDO ANTERIOR DE INTERES DIFERIDO 
,	NUEVOS_INT_DIF	DECIMAL	(11,2)	--SALDOS  DE  INTERES  (REFINANCIAMIENTO OTORGADOS DEL MES) 
,	PAGOS_INT_DIF 	DECIMAL	(11,2)	--PAGOS DEL MES DE INTERES DIFERIDOS 
,	SDO_ACT_INT_DIF 	DECIMAL	(11,2)	--SALDO  ACTUAL  DE  INTERES  DIFERIDO. (SALDO ANTERIOR+ NUEVO INTERESES DIFERIDOSPAGOS INTERESES DIFERIDOS)
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTCTRIRE;  CREATE TABLE IF NOT EXISTS SAT.PTCTRIRE  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO CTRIRECA	 	 		
,	OP_CLIENTE 	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	CODCARTERA 	VARCHAR	(2)	--CÓDIGO DE TIPO DE CARTERA NUEVO 
,	CODACTIVO 	VARCHAR	(2)	--ACTIVO DE RIESGOS NUEVO 
,	NUMREFEREN 	VARCHAR	(24)	--NUEVO NÚMERO DE REFERENCIA 
,	CODCARTCAN 	VARCHAR	(2)	--CÓDIGO DE TIPO DE CARTERA NUEVO 
,	CODACTICAN 	VARCHAR	(2)	--ACTIVO DE RIESGOS ANTERIOR 
,	NUMREFECAN 	VARCHAR	(24)	--NUMERO DE REFERENCIA ANTERIOR 
,	TOTPAGCAP 	DECIMAL	(11,2)	--TOTAL DE PAGO CAPITAL 
,	TOTPAGINT 	DECIMAL	(11,2)	--TOTAL PAGO DE INTERESES 
,	SDOTOTINT 	DECIMAL	(11,2)	--SALDO TOTAL DE INTERESES 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS SAT.PTREFMAS;  CREATE TABLE IF NOT EXISTS SAT.PTREFMAS  ( 	MIS_DATE 	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO REFIN MASTER	 	 		
,	DW_ACCT_NBR 	VARCHAR	(24)	--NUMERO DE LA CUENTA REFINANCIADORA 
,	DW_ORG 	DECIMAL	(4,0)	--CODIGO DE ENTIDAD 
,	DW_LOGO 	DECIMAL	(4,0)	--CODIGO DE SUBPRODUCTO 
,	DW_REL_NBR 	VARCHAR	(24)	--NUMERO UNICO 
,	DW_ACCT_TYPE 	VARCHAR	(1)	--IDENTIFICADOR DEL TIPO DE CUENTA 
,	DW_OPEN_DATE 	DATE		--FECHA DE OTORGAMIENTO 
,	DW_CLOSE_DATE 	DATE		--FECHA DE VENCIMIENTO 
,	DW_ORG_ACCT_NBR 	VARCHAR	(24)	--NUMERO DE CUENTA ORIGINAL (REFINANCIADA) 
,	DW_ORG_ACCT_DPD 	DECIMAL	(5,0)	--NUMERO ORIGNAL DE DPD (DIAS DE MORA) 
,	DW_ORG_ACCT_PRIN 	DECIMAL	(11,2)	--SALDO CAPITAL DE LA CUENTA REFINANCIADA 
,	DW_ORG_ACCT_INT 	DECIMAL	(11,2)	--SALDO DE INTERESES DE LA CUENTA REFINANCIADA 
,	DW_CYCLE_DUE 	DECIMAL	(2,0)	--CICLO DE LA CUENTA 
,	DW_DAYS_PAST_DUE 	DECIMAL	(5,0)	--DIAS DE MORA 
,	DW_DELQ_HISTORY 	VARCHAR	(24)	--HISTORICO DE MORA 
,	DW_NEW_ACCT_IND 	VARCHAR	(1)	--INDICADOR DE NUEVA CUENTA 
,	DW_LOAN_MOB 	DECIMAL	(5,0)	--MESES EN LIBROS 
,	MH_LOAN_AMT 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	MH_LOAN_DATE 	DATE		--FECHA OTORGAMIENTO 
,	MH_EFF_TENOR 	DECIMAL	(5,0)	--NUMERO DE CUOTAS 
,	MH_OUTST_BAL 	DECIMAL	(11,2)	--SALDO PENDIENTE 
,	MH_OUTST_TENOR 	DECIMAL	(5,0)	--CUOTAS PENDIENTES 
,	MH_BILLED_INSTALL 	DECIMAL	(3,0)	--NÚMERO DE CUOTAS FACTURADAS 
,	MH_BILLED_INT 	DECIMAL	(11,2)	--MONTO DE INTERÉS FACTURADO 
,	MH_BILLED_PRIN 	DECIMAL	(11,2)	--MONTO DE CAPITAL FACTURADO 
,	DW_INT_PAID_MTH 	DECIMAL	(11,2)	--SALDO MENSUAL DE INTERESES PAGADOS 
,	DW_PRIN_PAID_MTH 	DECIMAL	(11,2)	--SALDO MENSUAL DE CAPITAL PAGADO 
,	DW_TOT_INT_PAID 	DECIMAL	(11,2)	--TOTAL INTESES PAGADO 
,	DW_TOT_PRIN_PAID 	DECIMAL	(11,2)	--TOTAL CAPITAL PAGADO 
,	DT_NEW_INT_DEF 	DECIMAL	(11,2)	--SALDO INTERES DIFERIDO CALCULADO DEL MES 
,	DT_INT_DEF_AMT 	DECIMAL	(11,2)	--INTERESES DIFERIDOS PAGADOS EN EL MES 
,	DT_INT_DEF_BAL 	DECIMAL	(11,2)	--INTERES DIFERIDO DEL MES 
,	DT_INT_DEF_BAL_PREV 	DECIMAL	(11,2)	--INTERES DIFERIDO MES ANTERIOR 
,	DT_OWN_DPD_FLAG 	VARCHAR	(1)	--BANDERA PARA IDENTIFICAR CUENTA SIN MORA EN LOS ULTIMOS 6 MESES 
,	DT_RISK_CALIFICATION 	VARCHAR	(10)	--CATEGORIA DE RIESGO 
,	DW_LEGAL_VEHICLE 	VARCHAR	(3)	--VEHICULO LEGAL 
,	DW_PAYMENT_HISTORY 	VARCHAR	(12)	--HISTORICO DE PAGOS 
,	DW_REFIN_FLAG 	VARCHAR	(2)	--IDENTIFICADOR DE REFINANCIAMIENTO 
,	DW_BS_USER_DATE_4 	DATE		--FECHA DE USER4 
,	HB_FH_AMT_PMTS_01 	DECIMAL	(11,2)	--ÚLTIMA CANTIDAD DE PAGO DEL ESTADO DE CUENTA 
,	HB_FH_TOT_AMT_DUE_02 	DECIMAL	(11,2)	--PAGO MINIMO 
,	PT_MT_AMOUNT 	DECIMAL	(11,2)	-- MONTO PAGADO EN EL PERÍODO DE GRACIA 
,	DW_BS_CURR_BAL 	DECIMAL	(11,2)	--SALDO ACTUAL  
,	DW_BS_LAST_PYMT_DUE 	DATE		--FECHA VENCIMIENTO DE ULTIMO ESTADO DE CUENTA 
,	DT_PAYOFF_FLAG 	VARCHAR	(1)	--BANDERA DEL PAGO COMPLETO 
,	DW_BS_AMT_OUTST_EPP 	DECIMAL	(11,2)	--SALDO DEL EXTRAFINANCIAMIENTO 
,	DW_BS_ALOP_OUTST_BAL 	DECIMAL	(11,2)	--SALDO DEL INTRAFINANCIAMIENTO 
,	DW_SALDO_TOTAL  	DECIMAL	(11,2)	--SALDO TOTAL DE LA CUENTA 
,	DW_CUS_TYPE     	VARCHAR	(24)	--TIPO DE CLIENTE  
,	DW_CUS_SEGMENT  	VARCHAR	(30)	--SEGMENTO DE CLIENTE 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		

--********************************************************************************

drop table IF EXISTS STG_SAT.PTOPERAC;  CREATE TABLE IF NOT EXISTS STG_SAT.PTOPERAC  ( 	OP_FECHA_CORTE	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO DE OPERACIONES	 	 		
,	OP_FILIAL	DECIMAL	(1,0)	--IDENTIFICACION DE LA FILIAL 
,	OP_PRODUCTO	DECIMAL	(2,0)	--CÓDIGO DEL PRODUCTO 
,	OP_OPERACION	DECIMAL	(10,0)	--CODIGO OPERACIÓN 
,	OP_NUM_OP_IFI	VARCHAR	(20)	--NUMERO DE REFERENCIA 
,	OP_OFICIAL	VARCHAR	(10)	--CÓDIGO DEL FUNCIONARIO  
,	OP_CLIENTE	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	OP_CIUDAD	DECIMAL	(4,0)	--CÓDIGO CIUDAD 
,	OP_OFICINA	DECIMAL	(5,0)	--CÓDIGO OFICINA 
,	OP_MONEDA	DECIMAL	(1,0)	--CÓDIGO MONEDA 
,	OP_SECTOR_CONTABLE	VARCHAR	(2)	--SECTOR ECONÓMICO CONTABLE 
,	OP_SECTOR_REAL	VARCHAR	(2)	--CODIGO SECTOR REAL 
,	OP_DESTINO	VARCHAR	(10)	--DESTINO ECONÓMICO 
,	OP_TIPO_OPER	VARCHAR	(2)	--TIPO OPERACIÓN 
,	OP_CATEG_CONT	VARCHAR	(1)	--CATEGORÍA CONTABLE 
,	OP_CATEGORIA_OPER	VARCHAR	(2)	--CÓDIGO TIPO DE ACTIVO 
,	OP_CLASE_GTIA	VARCHAR	(2)	--CÓDIGO DE GARANTIA 
,	OP_TIPO_CARTERA	VARCHAR	(2)	--CÓDIGO TIPO CARTERA 
,	OP_TIPO_TRAMITE	VARCHAR	(1)	--CÓDIGO TIPO DE TRÁMITE 
,	OP_FECHA_INI	DATE		--FECHA DE OTORGAMIENTO 
,	OP_FECHA_FIN	DATE		--FECHA DE VENCIMIENTO 
,	OP_FECHA_FIN_LEGAL	DATE		--FECHA DE VENCIMIENTO LEGAL
,	OP_FECHA_CAS	DATE		--FECHA CASTIGO (SANEAMIENTO)
,	OP_FECHA_PAG	DATE		--FECHA DE ÚLTIMO PAGO 
,	OP_FECHA_CAN	DATE		--FECHA DE CANCELACIÓN 
,	OP_PLAZO	DECIMAL	(4,0)	--PLAZO DE LA OPERACIÓN 
,	OP_TOTAL_CUOTAS	DECIMAL	(3,0)	--NÚMERO TOTAL DE CUOTAS 
,	OP_TIPO_AMORTIZ	VARCHAR	(10)	--CÓDIGO TIPO DE AMORTIZACIÓN 
,	OP_GRACIA_CAP	DECIMAL	(2,0)	--DIAS DE GRACIA CAPITAL 
,	OP_GRACIA_INT	DECIMAL	(2,0)	--DIAS DE GRACIA INTERESES 
,	OP_PERIODO_CAP	DECIMAL	(2,0)	--PERIODO DE CAPITAL 
,	OP_PERIODO_INT	DECIMAL	(2,0)	--PERIODO DE INTERESES 
,	OP_MOROSIDAD_CAP	DECIMAL	(5,0)	--DIAS MORA CAPITAL 
,	OP_MOROSIDAD_INT	DECIMAL	(5,0)	--DIAS MORA INTERESES 
,	OP_TASA_ORIGINAL	DECIMAL	(6,4)	--TASA INTERES INICIAL 
,	OP_TASA_ACTUAL	DECIMAL	(6,4)	--TASA INTERES ACTUAL 
,	OP_TASA_REF	DECIMAL	(6,4)	--TASA INTERES REFERENCIA 
,	OP_TASA_EFECTIVA	DECIMAL	(6,4)	--TASA INTERES EFECTIVA 
,	OP_FORMA_REAJUSTE	VARCHAR	(1)	--FORMA DE REAJUSTE 
,	OP_ORIGEN_FONDOS	VARCHAR	(5)	--CÓDIGO ORIGEN DE FONDOS 
,	OP_VALOR_ORIGINAL	DECIMAL	(19,4)	--MONTO OTORGADO O LIMITE DE LA TARJETA 
,	OP_SALDO_CAPITAL	DECIMAL	(19,4)	--SALDO TOTAL CAPITAL 
,	OP_DESEMBOLSOS	DECIMAL	(19,4)	--DESEMBOLSOS PENDIENTES 
,	OP_CAPITAL_VCDO	DECIMAL	(19,4)	--CAPITAL VENCIDO 
,	OP_CAPITAL_MORA	DECIMAL	(19,4)	--CAPITAL MORA 
,	OP_SALDO_INTERES	DECIMAL	(19,4)	--SALDO TOTAL INTERESES 
,	OP_INTERES_VCDO	DECIMAL	(19,4)	--INTESESES VENCIDOS 
,	OP_INTERES_MORA	DECIMAL	(19,4)	--INTERESES EN MORA 
,	OP_RIESGO	DECIMAL	(19,4)	--SALDO DEL RIESGO ADEUDADO 
,	OP_ABONO_PEND	DECIMAL	(19,4)	--ABONOS PENDIENTES 
,	OP_VAL_ACTUAL_GTIA	DECIMAL	(19,4)	--VALOR ACTUAL DE LA GARANTIA 
,	OP_VAL_REAL_GTIA	DECIMAL	(19,4)	--VALOR REAL DE LA GARANTIA 
,	OP_COB_ACTUAL_GTIA	DECIMAL	(19,4)	--COBERTURA CON VALOR ACTUAL DE LA GARANTÍA 
,	OP_COB_REAL_GTIA	DECIMAL	(19,4)	--ES LA COBERTURA REAL O DE MERCADO CNSOLIDADA. 
,	OP_GARANTIA_INSCRITA	VARCHAR	(1)	--IDENTIFICAR DE GARANTIA INSCRITA 
,	OP_GARANTE_CART_PIG	VARCHAR	(2)	--IDENTIFICAR DE GARANTE 
,	OP_TIPO_CERTIFICADO	VARCHAR	(2)	--IDENTIFICADOR DE TIPO CERTIFICADO 
,	OP_FACTOR_MLO	DECIMAL	(8,4)	--FACTOR DE CAMBIO MONEDA 
,	OP_ESTADO_OPER	VARCHAR	(10)	--ESTADO REAL DE LA OPERACIÓN 
,	OP_USUARIO_MODIF	VARCHAR	(14)	--ID USUARIO QUE MODIFICA DATOS 
,	OP_FECHA_MODIF	DATE		--FECHA DE MODIFICACION 
,	OP_MORA	DECIMAL	(19,4)	--SALDO INTERES MORA 
,	OP_TASA_MORA	DECIMAL	(6,4)	--TASA INTERES MORA 
,	OP_CUOTAS_MORA	DECIMAL	(2,0)	--CUOTAS EN MORA 
,	OP_CALIFICACION	VARCHAR	(10)	--CATEGORIA DE RIESGO 
,	OP_RANGO_PLAZO	DECIMAL	(2,0)	--RANGO DEL PLAZO 
,	OP_RANGO_MORA_CAP	DECIMAL	(2,0)	--RANGO DE DIAS MORA CAPITAL 
,	OP_RANGO_MORA_INT	DECIMAL	(2,0)	--RANGO DE DIAS MORA INTERESES 
,	OP_RESERVA_REQUERIDA	DECIMAL	(19,4)	--RESERVA DE SANEAMIENTO REQUERIDA 
,	OP_RESERVA_CONSTITUIDA	DECIMAL	(19,4)	--RESERVA DE SANEAMIENTO CONSTITUIDA 
,	OP_DEDUCCIONES	DECIMAL	(19,4)	--DEDUCCIONES 
,	OP_COBERTURA_GTIA	DECIMAL	(19,4)	--COBERTURA DE LA GARANTIA 
,	OP_ETAPA_COBRO	VARCHAR	(10)	--ETAPA DE COBRO 
,	OP_CALIF_ANT	VARCHAR	(10)	--CATEGORIA DE RIESGO DEL MES PASADO 
,	OP_RES_REQUE_ANT	DECIMAL	(19,4)	--RESERVAS DE SANEAMIENTO REQUERIDA DEL MES ANTERIOR 
,	OP_RES_CONST_ANT	DECIMAL	(19,4)	--RESERVAS DE SANEAMIENTO CONSTITUIDA DEL MES ANTERIOR 
,	OP_RESULTADO_CALIF	DECIMAL	(1,0)	--CÓDIGO RESULTADO DE LA EVALUACIÓN 
,	OP_TIPO_MOROSIDAD	DECIMAL	(1,0)	--CÓDIGO TIPO MOROSIDAD 
,	OP_RANGO_MOROSIDAD	DECIMAL	(2,0)	--RANGO DE DIAS MORA MAYOR 
,	OP_RANGO_SALDO_TOTAL	DECIMAL	(2,0)	--RANGO DE SALDO 
,	OP_TIPO_OPER_SSF	VARCHAR	(10)	--CÓDIGO TIPO OPERACIÓN SEGÚN SSF 
,	OP_DESTINO_OPER_SSF	VARCHAR	(10)	--CODIGO DE DESTINO DE LA OPERACIÓN SEGÚN CODIFICACIÓN DE LA SSF.
,	OP_RANGO_PLAZO_FALTANTE	DECIMAL	(2,0)	--RANGO DE PLAZO FALTANTE 
,	OP_TIPO_LINEA_CR	VARCHAR	(10)	--CODIGO DE TIPO DE LINEA 
,	OP_CUENTA_CAP	VARCHAR	(20)	--CÓDIGO DE LA CUENTA CONTABLE DE CAPITAL 
,	OP_CUENTA_INT	VARCHAR	(20)	--CÓDIGO DE LA CUENTA CONTABLE DE INTERESES
,	OP_CUOTA	DECIMAL	(19,4)	--VALOR DE LA CUOTA
,	OP_NUM_LINEA	DECIMAL	(4,0)	--NÚMERO DE LINEA 
,	OP_OPERACION_CANCELO	VARCHAR	(24)	--OPERACIÓN CANCELADA 
,	OP_CLASE_GASTO	VARCHAR	(10)	--CÓDIGO DE CLASE DE GASTO 
,	OP_UNIDAD_MEDIDA	VARCHAR	(10)	--CÓDIGO DE UNIDAD DE MEDIDA 
,	OP_CANTIDAD_FINANCIADAS	DECIMAL	(19,4)	--CANTIDAD FINANCIADA 
,	OP_TRAMITE	DECIMAL	(4,0)	--NÚMERO DE TRAMITE 
,	OP_CUPOS_TERCEROS	VARCHAR	(10)	--CÓDIGO DE CUPOS TERCEROS 
,	OP_ULT_PAGCAP	DATE		--FECHA DE ÚLTIMO PAGO DE CAPITAL 
,	OP_ULT_PAGINT	DATE		--FECHA DE ÚLTIMO PAGO DE INTERÉS 
,	OP_FULT_REAJ	DATE		--FECHA DE ÚLTIMO REAJUSTE 
,	OP_FECHA_ESCRITURACION	DATE		--FECHA DE ESCRITURACIÓN 
,	OP_FECHA_DESDE_MORA_CAP	DATE		--FECHA DE INICIO DE MORA CAPITAL 
,	OP_FECHA_DESDE_MORA_INTS	DATE		--FECHA DE INICIO DE MORA INTERES 
,	OP_CUOT_MOCAP	DECIMAL	(5,0)	--NÚMERO DE CUOTAS EN MORA DE CAPITAL 
,	OP_CUOT_MOINT	DECIMAL	(5,0)	--NÚMERO DE CUOTAS EN MORA DE INTERES 
,	OP_PAGO_ADECAP	DECIMAL	(19,4)	--PAGO DE ADELANTO DE CAPITAL 
,	OP_CUOTAS_PAG	DECIMAL	(2,0)	--NÚMERO DE CUOTAS PAGADAS 
,	OP_DIAS_ANIO	DECIMAL	(3,0)	--NÚMEROS DE DIAS DEL AÑO 
,	OP_FECPROXCUO	DATE		--FECHA DE LA PRÓXIMA CUOTA 
,	OP_CLABAS	VARCHAR	(10)	--CLASIFICACION BASICA DEL PRESTAMO  
,	OP_VAL_GTIA_HIPO	DECIMAL	(19,4)	--  VALOR ACUMULADO DE GARANTIAS HIPOTECARIAS 
,	OP_VAL_GTIA_OTRAS	DECIMAL	(19,4)	--VALOR ACUMULADO DE OTRAS GARANTIAS NO HIPOTECARIAS 
,	OP_RIESGOS_A_RVA	DECIMAL	(19,4)	--RIESGO NETO 
,	OP_MONTO_SEGURO	DECIMAL	(19,4)	--MONTO DEL SEGURO DEL CREDITO 
,	OP_TIPO_PLAZO	VARCHAR	(10)	--TIPO DE PLAZO 
,	OP_MODIFICADO	VARCHAR	(1)	--BANDERA DE MODIFICACION 
,	OP_TIPO_DIVIDENDO	VARCHAR	(10)	--TIPO DIVIDENDO 
,	OP_RIESGO_A_RVA_ANT	DECIMAL	(19,4)	--RIESGO NETO DEL MES ANTERIOR 
,	OP_TASA_INI	DECIMAL	(6,4)	--TASA  INTERES INICIAL 
,	OP_DIAS_PRORROGA	DECIMAL	(4,0)	--DIAS DE PRORROGA 
,	OP_FECHA_INI_PRORR	DATE		--FECHA INICIO DE PRORROGA 
,	OP_TIPO_TASA_REFERENCIA	VARCHAR	(10)	--TIPO DE LA TASA DE REFERENCIA 
,	OP_FECHA_PROX_REAJUSTE	DATE		--FECHA DEL PROXIMO AJUSTE 
,	OP_TIPOTC	VARCHAR	(1)	--TIPO DE TARJETA DE CRÉDITO 
,	OP_CLASETC	VARCHAR	(1)	--CLASE DE TARJETA DE CRÉDITO 
,	OP_PRODUCTOTC	VARCHAR	(20)	--PRODUCTO DE LA TARJETA DE CRÉDITO 
,	VEHICULO_LEGAL	VARCHAR	(3)	--VEHICULO LEGAL 
,	EPP_POST_ACCOUNT	VARCHAR	(19)	--PAN 
,	OP_STATUS	VARCHAR	(1)	--STATUS DE CUENTA
,	CODBLQ1	DECIMAL	(2,0)	--CODIGO DE BLOQUEO 1 
,	CODBLQ2	DECIMAL	(2,0)	--CODIGO DE BLOQUEO 2 
,	FECBLQ1	DATE		--FECHA DE BLOQUEO 1 DE CUENTA 
,	FECBLQ2	DATE		--FECHA DE BLOQUEO 2 DE CUENTA 
,	LOGO	VARCHAR	(4)	--CODIGO DE SUBPRODUCTO
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTPROINT;  CREATE TABLE IF NOT EXISTS STG_SAT.PTPROINT  ( 	PV_FECHA_CORTE    	DATE		--TIPO OPERACIÓN SSF 
--LISTADO INTEREST PROVISION	 	 		
,	PV_NUM_OP_IFI     	VARCHAR	(20)	--NUMERO DE REFERENCIA 
,	PV_CLIENTE        	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	PV_TIPO_OPER      	VARCHAR	(2)	--TIPO OPERACIÓN 
,	PV_BALANCE_INT    	DECIMAL	(11,2)	--BALANCE INTERES  
,	PV_ACUMU_INT      	DECIMAL	(11,2)	--INTERESES DEL PERIODO 
,	PV_TOTAL_INT      	DECIMAL	(11,2)	--BALANCE TOTAL INTERÉS 
,	PV_CLABAS	VARCHAR	(10)	--CLASIFICACION BASICA DEL PRESTAMO
,	PV_TASA_ORIG      	DECIMAL	(6,4)	--TASA ORIGINAL 
,	PV_BILLING_CYCLE  	VARCHAR	(2)	--CICLO FACTURACIÓN 
,	PV_BALANCE_PRINC  	DECIMAL	(11,2)	--BALANCE CAPITAL 
,	PV_BRAND          	VARCHAR	(1)	--BRAND 
,	PV_VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTOCONC;  CREATE TABLE IF NOT EXISTS STG_SAT.PTOCONC  ( 	OP_FECHA_CORTE  	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO CONCILIATION	 	 		
,	OP_TIPO_OPER_SSF 	VARCHAR	(10)	--TIPO OPERACIÓN SSF 
,	OP_TIPO_OPER 	VARCHAR	(2)	--ID TIPO DE OPERACIÓN 
,	OP_CLABAS 	VARCHAR	(10)	--CLASIFICACIÓN BÁSICA 
,	OP_COSTUMER_TYPE 	VARCHAR	(10)	--SECTOR ECONÓMICO CONTABLE 
,	OP_CAPITAL_VIG 	DECIMAL	(11,2)	--BALANCE PRINCIPAL  
,	OP_CAPITAL_VEN 	DECIMAL	(11,2)	--CAPITAL VENCIDO 
,	OP_INTERES_VIG 	DECIMAL	(11,2)	--BALANCE INTERÉS 
,	OP_INTERES_VEN 	DECIMAL	(11,2)	--INTERÉS VENCIDO 
,	TOTAL 	DECIMAL	(11,2)	--CAPITAL VIGENTE + CAPITAL VENCIDO + INTERES VIGENTE + INTERÉS VENCIDO 
,	VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTOCOPS;  CREATE TABLE IF NOT EXISTS STG_SAT.PTOCOPS  ( 	OP_FECHA_CORTE 	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO CONCILIATION OPS	 	 		
,	OP_TIPO_OPER_SSF 	VARCHAR	(10)	--TIPO OPERACIÓN SSF 
,	OP_TIPO_OPER 	VARCHAR	(2)	--ID TIPO DE OPERACIÓN 
,	OP_CLABAS 	VARCHAR	(10)	--CLASIFICACIÓN BÁSICA 
,	OP_COSTUMER_TYPE 	VARCHAR	(10)	--SECTOR ECONÓMICO CONTABLE 
,	OP_CAPITAL_VIG	DECIMAL	(11,2)	--BALANCE PRINCIPAL  
,	OP_CAPITAL_VEN 	DECIMAL	(11,2)	--CAPITAL VENCIDO 
,	OP_INTERES_VIG 	DECIMAL	(11,2)	--BALANCE INTERÉS 
,	OP_INTERES_VEN 	DECIMAL	(11,2)	--INTERÉS VENCIDO 
,	TOTAL 	DECIMAL	(11,2)	--CAPITAL VIGENTE + CAPITAL VENCIDO + INTERES VIGENTE + INTERÉS VENCIDO 
,	BRAND 	VARCHAR	(1)	--BRAND 
,	VEHICULO_LEGAL 	VARCHAR	(3)	--VEHICULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTCREBAL;  CREATE TABLE IF NOT EXISTS STG_SAT.PTCREBAL  ( 	IDW_DATE	DATE		--FECHA 
--LISTADO CREDIT BALANCE	 	 		
,	NIT_PERSONA 	VARCHAR	(24)	--NUMERO DE IDENTIFICACION TRIBUTARIA 
,	PRIMAPELL 	VARCHAR	(20)	--PRIMER PAELLIDO 
,	SEGUAPELL 	VARCHAR	(20)	--SEGUNDO APELLIDO 
,	APECASADA 	VARCHAR	(20)	--APELLIDO DE CASADA 
,	PRIMNOMB 	VARCHAR	(22)	--PRIMER NOMBRE 
,	SEGUNOMB 	VARCHAR	(20)	--SEGUNDO NOMBRE  
,	NOMSOCIE 	VARCHAR	(100)	--NOMBRE DE LA SOCIEDAD 
,	NUMREFEREN 	VARCHAR	(20)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	MONTOREFER 	DECIMAL	(11,2)	--MONTO OTORGADO ORIGINALMENTE 
,	SALDO 	DECIMAL	(11,2)	--SALDO TOTAL DE LA REFERENCIA 
,	FECOTOGAM 	DATE		--FECHA EN LA QUE FUE OTORGADO 
,	FECVENCIMI 	DATE		--FECHA VENCIMIENTO 
,	TASAINTE 	DECIMAL	(6,4)	--TASA VIGENTE EN EL MES REPORTADO 
,	ESTADO_OPER 	VARCHAR	(10)	--ESTADO DE LA OPERACIÓN PARA OBTENER SI LA CUENTA ESTÁ SANEADA 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHÍCULO LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTCHARGE;  CREATE TABLE IF NOT EXISTS STG_SAT.PTCHARGE  ( 	IDW_DATE	DATE		--FECHA 
--LISTADO CHARGE OFF ACCOUNT	 	 		
,	CUENTA 	VARCHAR	(24)	--NÚMERO DE REFERENCIA DEL DEUDOR 
,	CIF 	VARCHAR	(24)	--NUMERO DE CIF ASIGNADO AL DEUDOR 
,	NIT 	VARCHAR	(24)	--NÚMERO DE IDENTIDAD 
,	NOMBRE 	VARCHAR	(100)	--NOMBRE DEL DEUDOR 
,	FECOTOR 	DATE		--FECHA DE OTORGAMIENTO 
,	FVENCT 	DATE		--FECHA DE VENCIMIENTO 
,	MONTO 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	CAPITAL 	DECIMAL	(11,2)	--SALDO CAPITAL 
,	INTERES 	DECIMAL	(11,2)	--SALDO DE INTERÉS 
,	FECVENT 	DATE		--FECHA DE TRASLADO A SANEADA 
,	VEHICULO_LEGAL  	VARCHAR	(3)	--VEHICULO_LEGAL 
,	ORG 	VARCHAR	(4)	--CÓDIGO DE ENTIDAD 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTDEDEIN;  CREATE TABLE IF NOT EXISTS STG_SAT.PTDEDEIN  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO DETAILED DEFEREED INTERES	 	 		
,	OP_CLIENTE 	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	REFERENCIA 	VARCHAR	(24)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	FEC_REF 	DATE		--FECHA DE REFINANCIAMIENTO 
,	SDO_ORG_DIF 	DECIMAL	(11,2)	--BALANCE INTERESES DEVENGADOS 
,	VEHICULO_LEGAL         	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTMOINTR;  CREATE TABLE IF NOT EXISTS STG_SAT.PTMOINTR  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO MOVIMIENTOS INTERES REF	 	 		
,	OP_CLIENTE	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	NUMREFEREN	VARCHAR	(24)	--NUMERO DE REFERENCIA QUE POSEE EL DEUDOR POR LA DEUDA 
,	INTNVOSRF	DECIMAL	(11,2)	--INTERESES TOTALES DE REFINANCIAMIENTO 
,	PAGINTRF	DECIMAL	(11,2)	--PAGO DE INTERESES DE REFINANCIAMIENTO 
,	MONTO 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	TOTAL_BALANCE 	DECIMAL	(11,2)	--BALANCE TOTAL 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTREDEIN;  CREATE TABLE IF NOT EXISTS STG_SAT.PTREDEIN  ( 	FEC_MOV 	DATE		--FECHA 
--LISTADO RESUME DEFERRED INTERES	 	 		
,	SDO_ANT_DIF 	DECIMAL	(11,2)	--SALDO ANTERIOR DE INTERES DIFERIDO 
,	NUEVOS_INT_DIF	DECIMAL	(11,2)	--SALDOS  DE  INTERES  (REFINANCIAMIENTO OTORGADOS DEL MES) 
,	PAGOS_INT_DIF 	DECIMAL	(11,2)	--PAGOS DEL MES DE INTERES DIFERIDOS 
,	SDO_ACT_INT_DIF 	DECIMAL	(11,2)	--SALDO  ACTUAL  DE  INTERES  DIFERIDO. (SALDO ANTERIOR+ NUEVO INTERESES DIFERIDOSPAGOS INTERESES DIFERIDOS)
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTCTRIRE;  CREATE TABLE IF NOT EXISTS STG_SAT.PTCTRIRE  ( 	IDW_FECHA	DATE		--FECHA 
--LISTADO CTRIRECA	 	 		
,	OP_CLIENTE 	VARCHAR	(24)	--CÓDIGO DEL CLIENTE / NÚMERO ÚNICO DEL BANCO. 
,	CODCARTERA 	VARCHAR	(2)	--CÓDIGO DE TIPO DE CARTERA NUEVO 
,	CODACTIVO 	VARCHAR	(2)	--ACTIVO DE RIESGOS NUEVO 
,	NUMREFEREN 	VARCHAR	(24)	--NUEVO NÚMERO DE REFERENCIA 
,	CODCARTCAN 	VARCHAR	(2)	--CÓDIGO DE TIPO DE CARTERA NUEVO 
,	CODACTICAN 	VARCHAR	(2)	--ACTIVO DE RIESGOS ANTERIOR 
,	NUMREFECAN 	VARCHAR	(24)	--NUMERO DE REFERENCIA ANTERIOR 
,	TOTPAGCAP 	DECIMAL	(11,2)	--TOTAL DE PAGO CAPITAL 
,	TOTPAGINT 	DECIMAL	(11,2)	--TOTAL PAGO DE INTERESES 
,	SDOTOTINT 	DECIMAL	(11,2)	--SALDO TOTAL DE INTERESES 
,	VEHICULO_LEGAL            	VARCHAR	(3)	--VEHICULO_LEGAL 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		
drop table IF EXISTS STG_SAT.PTREFMAS;  CREATE TABLE IF NOT EXISTS STG_SAT.PTREFMAS  ( 	MIS_DATE 	DATE		--FECHA DE CORTE DE LA INFORMACIÓN 
--LISTADO REFIN MASTER	 	 		
,	DW_ACCT_NBR 	VARCHAR	(24)	--NUMERO DE LA CUENTA REFINANCIADORA 
,	DW_ORG 	DECIMAL	(4,0)	--CODIGO DE ENTIDAD 
,	DW_LOGO 	DECIMAL	(4,0)	--CODIGO DE SUBPRODUCTO 
,	DW_REL_NBR 	VARCHAR	(24)	--NUMERO UNICO 
,	DW_ACCT_TYPE 	VARCHAR	(1)	--IDENTIFICADOR DEL TIPO DE CUENTA 
,	DW_OPEN_DATE 	DATE		--FECHA DE OTORGAMIENTO 
,	DW_CLOSE_DATE 	DATE		--FECHA DE VENCIMIENTO 
,	DW_ORG_ACCT_NBR 	VARCHAR	(24)	--NUMERO DE CUENTA ORIGINAL (REFINANCIADA) 
,	DW_ORG_ACCT_DPD 	DECIMAL	(5,0)	--NUMERO ORIGNAL DE DPD (DIAS DE MORA) 
,	DW_ORG_ACCT_PRIN 	DECIMAL	(11,2)	--SALDO CAPITAL DE LA CUENTA REFINANCIADA 
,	DW_ORG_ACCT_INT 	DECIMAL	(11,2)	--SALDO DE INTERESES DE LA CUENTA REFINANCIADA 
,	DW_CYCLE_DUE 	DECIMAL	(2,0)	--CICLO DE LA CUENTA 
,	DW_DAYS_PAST_DUE 	DECIMAL	(5,0)	--DIAS DE MORA 
,	DW_DELQ_HISTORY 	VARCHAR	(24)	--HISTORICO DE MORA 
,	DW_NEW_ACCT_IND 	VARCHAR	(1)	--INDICADOR DE NUEVA CUENTA 
,	DW_LOAN_MOB 	DECIMAL	(5,0)	--MESES EN LIBROS 
,	MH_LOAN_AMT 	DECIMAL	(11,2)	--MONTO ORIGINAL 
,	MH_LOAN_DATE 	DATE		--FECHA OTORGAMIENTO 
,	MH_EFF_TENOR 	DECIMAL	(5,0)	--NUMERO DE CUOTAS 
,	MH_OUTST_BAL 	DECIMAL	(11,2)	--SALDO PENDIENTE 
,	MH_OUTST_TENOR 	DECIMAL	(5,0)	--CUOTAS PENDIENTES 
,	MH_BILLED_INSTALL 	DECIMAL	(3,0)	--NÚMERO DE CUOTAS FACTURADAS 
,	MH_BILLED_INT 	DECIMAL	(11,2)	--MONTO DE INTERÉS FACTURADO 
,	MH_BILLED_PRIN 	DECIMAL	(11,2)	--MONTO DE CAPITAL FACTURADO 
,	DW_INT_PAID_MTH 	DECIMAL	(11,2)	--SALDO MENSUAL DE INTERESES PAGADOS 
,	DW_PRIN_PAID_MTH 	DECIMAL	(11,2)	--SALDO MENSUAL DE CAPITAL PAGADO 
,	DW_TOT_INT_PAID 	DECIMAL	(11,2)	--TOTAL INTESES PAGADO 
,	DW_TOT_PRIN_PAID 	DECIMAL	(11,2)	--TOTAL CAPITAL PAGADO 
,	DT_NEW_INT_DEF 	DECIMAL	(11,2)	--SALDO INTERES DIFERIDO CALCULADO DEL MES 
,	DT_INT_DEF_AMT 	DECIMAL	(11,2)	--INTERESES DIFERIDOS PAGADOS EN EL MES 
,	DT_INT_DEF_BAL 	DECIMAL	(11,2)	--INTERES DIFERIDO DEL MES 
,	DT_INT_DEF_BAL_PREV 	DECIMAL	(11,2)	--INTERES DIFERIDO MES ANTERIOR 
,	DT_OWN_DPD_FLAG 	VARCHAR	(1)	--BANDERA PARA IDENTIFICAR CUENTA SIN MORA EN LOS ULTIMOS 6 MESES 
,	DT_RISK_CALIFICATION 	VARCHAR	(10)	--CATEGORIA DE RIESGO 
,	DW_LEGAL_VEHICLE 	VARCHAR	(3)	--VEHICULO LEGAL 
,	DW_PAYMENT_HISTORY 	VARCHAR	(12)	--HISTORICO DE PAGOS 
,	DW_REFIN_FLAG 	VARCHAR	(2)	--IDENTIFICADOR DE REFINANCIAMIENTO 
,	DW_BS_USER_DATE_4 	DATE		--FECHA DE USER4 
,	HB_FH_AMT_PMTS_01 	DECIMAL	(11,2)	--ÚLTIMA CANTIDAD DE PAGO DEL ESTADO DE CUENTA 
,	HB_FH_TOT_AMT_DUE_02 	DECIMAL	(11,2)	--PAGO MINIMO 
,	PT_MT_AMOUNT 	DECIMAL	(11,2)	-- MONTO PAGADO EN EL PERÍODO DE GRACIA 
,	DW_BS_CURR_BAL 	DECIMAL	(11,2)	--SALDO ACTUAL  
,	DW_BS_LAST_PYMT_DUE 	DATE		--FECHA VENCIMIENTO DE ULTIMO ESTADO DE CUENTA 
,	DT_PAYOFF_FLAG 	VARCHAR	(1)	--BANDERA DEL PAGO COMPLETO 
,	DW_BS_AMT_OUTST_EPP 	DECIMAL	(11,2)	--SALDO DEL EXTRAFINANCIAMIENTO 
,	DW_BS_ALOP_OUTST_BAL 	DECIMAL	(11,2)	--SALDO DEL INTRAFINANCIAMIENTO 
,	DW_SALDO_TOTAL  	DECIMAL	(11,2)	--SALDO TOTAL DE LA CUENTA 
,	DW_CUS_TYPE     	VARCHAR	(24)	--TIPO DE CLIENTE  
,	DW_CUS_SEGMENT  	VARCHAR	(30)	--SEGMENTO DE CLIENTE 
,	LOAD_DATE	DATE null default getdate()		--FECHA DE CARGA
); COMMIT;	 	 		

------------------------------------------------
---- INSERT CAT_JOBS ------------------------
------------------------------------------------
if exists(select 1 from cnf.cat_jobs where NOMBRE_JOB = 'JOB_PPJ')
delete from cnf.cat_jobs
where NOMBRE_JOB = 'JOB_PPJ' --limpieza de la tabla en caso que exista.

INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTREFMAS',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTCTRIRE',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTREDEIN',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTMOINTR',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTDEDEIN',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTCHARGE',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTCREBAL',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTOCOPS',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTOCONC',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTPROINT',NULL,0);
INSERT INTO "CNF"."CAT_JOBS" ("NOMBRE_JOB","NOMBRE_TABLA","TIPO_CARGA","REPROCESO") VALUES('JOB_PPJ','PTOPERAC',NULL,0)

------------------------------------------------
---- CONTROL DE VERSION ------------------------
------------------------------------------------
create table IF NOT EXISTS CNF.VERSION_OBJETOS (
 NOMBRE_MALLA varchar(100)
,OBJECT_NAME varchar(100)
,OBJECT_USER varchar(20)
,VERSION_COMMIT VARCHAR(100)
,VERSION_CODE VARCHAR(20)
,VERSION_DATE DATETIME
,CRDATE DATETIME null default getdate()
,CRUSER varchar(20) null default user_name()
)
;
COMMIT;

declare 
 @NOMBRE_MALLA varchar(100)
,@OBJECT_NAME varchar(100)
,@OBJECT_USER varchar(20)
,@VERSION_COMMIT VARCHAR(100)
,@VERSION_CODE VARCHAR(20)
,@VERSION_DATE DATETIME 
,@CRDATE DATETIME

select 
 @NOMBRE_MALLA = 'N/A.ODS'
,@OBJECT_NAME = 'PTCHARGE'
,@OBJECT_USER = 'SAT'
,@VERSION_COMMIT = '9af52fb36d6a53cb5287130509335edcb4aa29f6'
,@VERSION_CODE = '9af52fb'
,@VERSION_DATE = 'April 9, 2019 3:51:36 PM'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTCREBAL'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTCTRIRE'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTDEDEIN'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTMOINTR'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOCONC'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOCOPS'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOPERAC'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTPROINT'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTREDEIN'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

------------------- stage --------------
select 
 @OBJECT_NAME = 'PTCHARGE'
,@OBJECT_USER = 'STG_SAT'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTCREBAL'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTCTRIRE'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTDEDEIN'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTMOINTR'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOCONC'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOCOPS'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTOPERAC'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTPROINT'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTREDEIN'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

---- cambios ptrefmas
select 
 @NOMBRE_MALLA = 'N/A.ODS'
,@OBJECT_USER = 'SAT'
,@VERSION_COMMIT = '1a64be38e057dbf3d20ea1b3ea98cde73e0b3dac'
,@VERSION_CODE = '1a64be3'
,@VERSION_DATE = 'May 3, 2019 12:51:00 PM'
,@OBJECT_NAME = 'PTREFMAS'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'PTREFMAS'
,@OBJECT_USER = 'STG_SAT'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

COMMIT;