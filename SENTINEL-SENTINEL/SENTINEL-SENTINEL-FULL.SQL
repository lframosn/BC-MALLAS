--- creacion de grupo de usuarios SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'SAT')
BEGIN
  CREATE USER SAT 
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;

--- creacion de grupo de usuarios STG_SAT
IF NOT EXISTS (SELECT 1 FROM DBO.SYSUSERS WHERE name = 'STG_SAT')
BEGIN
  CREATE USER STG_SAT
  FORCE PASSWORD CHANGE OFF;
END;
COMMIT;


drop table IF EXISTS SAT.SSS_CASO;  CREATE TABLE IF NOT EXISTS SAT.SSS_CASO  (  ID_CASO INTEGER  --
, NUMERO_CLIENTE VARCHAR (20) --
, DESCRIPCION VARCHAR (300) --
, ID_ESTADO INTEGER  --
, FECHA_INGRESO DATETIME  --
, FECHA_INICIO DATETIME  --
, FECHA_CIERRE DATETIME  --
, FECHA_AUDITORIA DATETIME  --
, USUARIO_CREACION VARCHAR (64) --
, USUARIO_SEGUIMIENTO VARCHAR (64) --
, PROXIMA_ACCION DATETIME  --
, CODIGO_OFICIAL VARCHAR (25) --
, ID_ESTADO_WEB INTEGER  --
, NIVEL_REV VARCHAR (25) --
, ACCION_REV VARCHAR (20) --
, MONTO_SALVADO float  --
, COD_GRUPO_TRAB VARCHAR (10) --
, TIPO VARCHAR (10) --
, ID_CALCULO INTEGER  --
, OFICIAL_CUENTA_ASIGNADO VARCHAR (25) --
, FECHA_VENCIMIENTO DATETIME  --
); COMMIT;      

drop table IF EXISTS SAT.SSS_ESTADO;  CREATE TABLE IF NOT EXISTS SAT.SSS_ESTADO  (  ID_ESTADO INTEGER  --
, TIPO VARCHAR (2) --
, DESCRIPCION VARCHAR (80) --
, NIVEL INTEGER  --
, ESTADO_FINAL BIT null--
, PRIVILEGIO_OFICIAL BIT null --
); COMMIT;      

drop table IF EXISTS STG.SSS_CASO;  
drop table IF EXISTS STG_SAT.SSS_CASO;  
CREATE TABLE IF NOT EXISTS STG_SAT.SSS_CASO  (  ID_CASO INTEGER  --
, NUMERO_CLIENTE VARCHAR (20) --
, DESCRIPCION VARCHAR (300) --
, ID_ESTADO INTEGER  --
, FECHA_INGRESO DATETIME  --
, FECHA_INICIO DATETIME  --
, FECHA_CIERRE DATETIME  --
, FECHA_AUDITORIA DATETIME  --
, USUARIO_CREACION VARCHAR (64) --
, USUARIO_SEGUIMIENTO VARCHAR (64) --
, PROXIMA_ACCION DATETIME  --
, CODIGO_OFICIAL VARCHAR (25) --
, ID_ESTADO_WEB INTEGER  --
, NIVEL_REV VARCHAR (25) --
, ACCION_REV VARCHAR (20) --
, MONTO_SALVADO float  --
, COD_GRUPO_TRAB VARCHAR (10) --
, TIPO VARCHAR (10) --
, ID_CALCULO INTEGER  --
, OFICIAL_CUENTA_ASIGNADO VARCHAR (25) --
, FECHA_VENCIMIENTO DATETIME  --
); COMMIT;      

drop table IF EXISTS STG.SSS_ESTADO;  
drop table IF EXISTS STG_SAT.SSS_ESTADO;  
CREATE TABLE IF NOT EXISTS STG_SAT.SSS_ESTADO  (  ID_ESTADO INTEGER  --
, TIPO VARCHAR (2) --
, DESCRIPCION VARCHAR (80) --
, NIVEL INTEGER  --
, ESTADO_FINAL BIT null --
, PRIVILEGIO_OFICIAL BIT null --
); COMMIT;      

------------------------------------------------
---- CONTROL DE VERSION ------------------------
------------------------------------------------
create table IF NOT EXISTS CNF.VERSION_OBJETOS (
 NOMBRE_MALLA varchar(100)
,OBJECT_NAME varchar(100)
,OBJECT_USER varchar(20)
,VERSION_COMMIT VARCHAR(100)
,VERSION_CODE VARCHAR(20)
,VERSION_DATE DATETIME
,CRDATE DATETIME null default getdate()
,CRUSER varchar(20) null default user_name()
)
;
COMMIT;

declare 
 @NOMBRE_MALLA varchar(100)
,@OBJECT_NAME varchar(100)
,@OBJECT_USER varchar(20)
,@VERSION_COMMIT VARCHAR(100)
,@VERSION_CODE VARCHAR(20)
,@VERSION_DATE DATETIME 
,@CRDATE DATETIME

select 
 @NOMBRE_MALLA = 'SENTINEL'
,@OBJECT_NAME = 'SSS_CASO'
,@OBJECT_USER = 'SAT'
,@VERSION_COMMIT = '0d5eb875924d80b8a1a5549714c41c13683bcadd'
,@VERSION_CODE = '0d5eb87'
,@VERSION_DATE = 'March 15, 2019 10:03:12 AM'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'SSS_ESTADO'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_USER = 'STG_SAT'
,@OBJECT_NAME = 'SSS_CASO'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

select 
 @OBJECT_NAME = 'SSS_ESTADO'
,@CRDATE = NULL

SELECT @CRDATE = create_time 
FROM SYSUSERS U, SYSTABLE T, SYSIQTABLE S
where T.table_name = @OBJECT_NAME
  and T.creator = U.uid
  and U.name = @OBJECT_USER
  and T.table_id = S.table_id
if @CRDATE IS NULL SELECT @CRDATE = getdate()

IF EXISTS(SELECT 1 from CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE)
  DELETE CNF.VERSION_OBJETOS where OBJECT_NAME = @OBJECT_NAME AND OBJECT_USER = @OBJECT_USER AND VERSION_CODE = @VERSION_CODE
insert CNF.VERSION_OBJETOS (
 NOMBRE_MALLA, OBJECT_NAME ,OBJECT_USER ,VERSION_COMMIT ,VERSION_CODE ,VERSION_DATE ,CRDATE
)
select 
 @NOMBRE_MALLA, @OBJECT_NAME ,@OBJECT_USER ,@VERSION_COMMIT,@VERSION_CODE ,@VERSION_DATE ,@CRDATE 

COMMIT;
